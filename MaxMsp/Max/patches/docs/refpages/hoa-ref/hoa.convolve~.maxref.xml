<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="hoa.convolve~">
	<digest>
		An ambisonics zero latency convolution reverberation.
	</digest>
	<description>
		<o>
			hoa.convolve~
		</o>
        apply reveberation on harmonics dependant signals using FIR (Finite Impulse Response) and FFT (Fast Fourier Transform) filtering. The zero latency convolution is optimized with the Gardner algorithm and uses the circular harmonics behavior to reduce the number of FFT convolutions.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			hoa.library by Julien Colafrancesco, Pierre Guillot, Eliott Paris.
		</metadata>
		<metadata name="tag">
			Ambisonics spatialization.
		</metadata>
	</metadatalist>
    
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="signal">
			<digest>
				Harmonics signal inputs.
			</digest>
			<description>
				Harmonics signal inputs.
			</description>
		</inlet>
	</inletlist>
    
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="signal">
			<digest>
				Harmonics signal outputs.
			</digest>
			<description>
				Harmonics signal outputs.
			</description>
		</outlet>
	</outletlist>
    
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="ambisonic-order" type="int" optional="0">
			<digest>
				ambisonic order.
			</digest>
			<description>
				Set the ambisonic order.
			</description>
		</objarg>
	</objarglist>
    
	<!--MESSAGES-->
	<methodlist>
		<method name="signal">
			<arglist />
			<digest>
				Harmonics signals.
			</digest>
			<description>
				Harmonics signals.
			</description>
		</method>
	</methodlist>
    
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="buffers" get="1" set="1" type="atom" size="10">
			<digest>
				Bind buffer~ object's names with a list.
			</digest>
			<description>
				Bind buffer~ object's names with a list.
				<o>hoa.convolve~</o> share the same syntax as the <o>polybuffer~</o> object and auto-complete the name with the "all" message.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Buffer~ Objects Names" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="varchar" />
			</attributelist>
		</attribute>
		<attribute name="channels" get="1" set="1" type="atom" size="10">
			<digest>
				Bind the buffer~ object's channels.
			</digest>
			<description>
				The buffer~ object channels can be set with a list.
				<o>hoa.convolve~</o> accepts the pre-message "all".
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Buffer~ Objects Channels" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="varlong" />
			</attributelist>
		</attribute>
		<attribute name="limits" get="1" set="1" type="atom" size="10">
			<digest>
				Bind the buffer~ object's channels.
			</digest>
			<description>
				The size of the buffer can be limited with "limits" message and a list. 0 meaning no limit.
				<o>hoa.convolve~</o> accepts the pre-message "all".
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Buffer~ Objects Size Used" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="varlong" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example caption="hoa.convolve~ used with a small order is an efficient tool to reduce CPU usage. At first order, it computes only three zero latency convolutions and allows to output on an infinity of loudspeakers."/>
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="hoa.encoder~" />
		<seealso name="hoa.decoder~" />
        <seealso name="hoa.optim~" />
        <seealso name="hoa.meter~" />
        <seealso name="hoa.spat" />
        <seealso name="hoa.scope~" />
        <seealso name="hoa.plug~" />
        <seealso name="hoa.projector~" />
        <seealso name="hoa.recomposer~" />
        <seealso name="hoa.binaural~" />
        <seealso name="hoa.connect" />
        <seealso name="hoa.dac~" />
        <seealso name="hoa.pi" />
        <seealso name="hoa.play~" />
        <seealso name="hoa.record~" />
	</seealsolist>
</c74object>
