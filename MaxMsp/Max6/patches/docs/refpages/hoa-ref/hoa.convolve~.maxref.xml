<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="hoa.convolve~" module="hoa" category="ambisonics">
	<digest>
		An ambisonics zero latency convolution reverberation.
	</digest>
	<description>
		<o>
			hoa.convolve~
		</o>
        uses time and frequency domain filtering to apply reveberation on harmonics dependant signals. The zero latency convolution is optimized with an algorithm based on the Gardner algorithm.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			hoa.library by Julien Colafrancesco, Pierre Guillot, Eliott Paris.
		</metadata>
		<metadata name="tag">
			Ambisonics spatialization.
		</metadata>
	</metadatalist>
    
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="signal">
			<digest>
				Harmonics signal inputs.
			</digest>
			<description>
				Harmonics signal inputs.
			</description>
		</inlet>
	</inletlist>
    
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="signal">
			<digest>
				Harmonics signal outputs.
			</digest>
			<description>
				Harmonics signal outputs.
			</description>
		</outlet>
	</outletlist>
    
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="ambisonic-order" type="int" optional="0">
			<digest>
				Ambisonic order.
			</digest>
			<description>
				Set the Ambisonic Order.
			</description>
		</objarg>
	</objarglist>
    
	<!--MESSAGES-->
	<methodlist>
		<method name="signal">
			<arglist />
			<digest>
				Harmonics signals.
			</digest>
			<description>
				Harmonics signals.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Impolitely clears the Reverb.
			</digest>
			<description>
				Impolitely clears the Reverb.
			</description>
		</method>
	</methodlist>
    
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="buffer" get="1" set="1" type="atom" size="10">
			<digest>
				Buffer name.
			</digest>
			<description>
				Names the <o>buffer~</o> object containing the sample to be used by <o>hoa.convolve~</o> as an impulse response.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Buffer~ Object Name" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="varchar" />
			</attributelist>
		</attribute>
		<attribute name="channel" get="1" set="1" type="atom" size="10">
			<digest>
				Buffer Channel.
			</digest>
			<description>
				Set the <o>buffer~</o> object channel to be used by <o>hoa.convolve~</o>
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Buffer~ Object Channel" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="varlong" />
			</attributelist>
		</attribute>
		<attribute name="dry" get="1" set="1" type="float" size="1">
			<digest>
				Dry factor.
			</digest>
			<description>
				Set the Dry factor.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Dry" />
				<attribute name="type" get="1" set="1" type="symbol" size="1" value="float" />
			</attributelist>
		</attribute>
		<attribute name="wet" get="1" set="1" type="atom" size="10">
			<digest>
				Wet factor.
			</digest>
			<description>
				Set the Wet factor.
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="symbol" size="1" value="Behavior" />
				<attribute name="label" get="1" set="1" type="symbol" size="1" value="Wet" />
				<attribute name="type" get="1" set="1" type="symbol" size="1" value="float" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example caption="hoa.convolve~ used with a small order is an efficient tool to reduce CPU usage. At first order, it computes only three zero latency convolutions and allows to output on an infinity of loudspeakers."/>
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="hoa.binaural~" />
		<seealso name="hoa.connect" />
		<seealso name="hoa.control" />
		<seealso name="hoa.convolve~" />
		<seealso name="hoa.dac~" />
		<seealso name="hoa.decoder~" />
		<seealso name="hoa.encoder~" />
		<seealso name="hoa.freeverb~" />
		<seealso name="hoa.gigaverb~" />
		<seealso name="hoa.map" />
		<seealso name="hoa.map~" />
        <seealso name="hoa.meter~" />
        <seealso name="hoa.optim~" />
        <seealso name="hoa.pi" />
        <seealso name="hoa.pi~" />
        <seealso name="hoa.play~" />
        <seealso name="hoa.plug~" />
        <seealso name="hoa.projector~" />
        <seealso name="hoa.recomposer~" />
        <seealso name="hoa.record~" />
        <seealso name="hoa.rotate~" />
        <seealso name="hoa.scope~" />
        <seealso name="hoa.space" />
        <seealso name="hoa.space~" />
        <seealso name="hoa.stereo~" />
        <seealso name="hoa.vector~" />
        <seealso name="hoa.wider~" />
	</seealsolist>
</c74object>