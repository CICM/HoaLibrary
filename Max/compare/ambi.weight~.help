max v2;#N vpatcher 532 76 1413 624;#P origin 0 -2;#P window setfont "Sans Serif" 9.;#P window linecount 1;#P comment 16 230 270 196617 Arguments:;#P window linecount 2;#P comment 660 255 126 196617 pre-defined weights (vary according to order):;#P window linecount 3;#P comment 640 212 72 196617 zeroth (mono) \, first \, second & third;#P window linecount 1;#P newex 569 282 83 196617 prepend weights;#P user multiSlider 569 211 67 67 0. 1. 4 2937 47 0 0 2 0 0 0;#M frgb 0 0 0;#M brgb 255 255 255;#M rgb2 127 127 127;#M rgb3 0 0 0;#M rgb4 37 52 91;#M rgb5 74 105 182;#M rgb6 112 158 18;#M rgb7 149 211 110;#M rgb8 187 9 201;#M rgb9 224 62 37;#M rgb10 7 114 128;#P user umenu 660 282 67 196647 1 64 298 1;#X add none;#X add default;#X add in-phase;#X add max-rE;#P window linecount 4;#P comment 569 151 272 196617 these messages balance the components of an Ambisonic encoded soundfield per order \, either using a set of pre-defined weights as recommended in the literature \, or by a user-defined set of weights using the 'weights' message:;#P window linecount 2;#P comment 37 260 270 196617 Order: "1st" (default) \, "2nd" or "3rd" (or optionally "1st-order" etc.);#P window linecount 1;#P comment 37 246 270 196617 Dimensions: "2D" (default) or "3D";#P window linecount 3;#P comment 37 303 277 196617 Decoding weight presets ("none" \, "default" \, "in-phase" or "max-re") \, or set of 2 \, 3 or 4 weights (floats) for each order (see below);#P window linecount 1;#P comment 37 287 277 196617 Number of loudspeakers;#P hidden newex 30 450 46 196617 onecopy;#P message 179 488 70 196617 ambi.decode~;#P message 103 488 70 196617 ambi.weight~;#P message 179 435 75 196617 ambi.encoden~;#P comment 103 419 53 196617 see also:;#P message 179 461 71 196617 ambi.mirror~;#P message 103 461 68 196617 ambi.rotate~;#P message 103 435 70 196617 ambi.encode~;#P hidden newex 30 495 47 196617 pcontrol;#P hidden newex 30 472 66 196617 prepend help;#P message 756 435 27 196617 stop;#P message 686 435 65 196617 startwindow;#P user panel 678 428 113 30;#X brgb 255 255 255;#X frgb 100 202 30;#X border 2;#X rounded 0;#X shadow 0;#X done;#P window linecount 5;#P comment 16 153 289 196617 ambi.weight~ essentially duplicates functionality available in ambi.decode~ \, however it may be recommended when mixing sources of different orders \, or to achieve particular spatial separations for different encoders. Remember to set the decoder's default weights to "none" when using ambi.weight~;#P window linecount 1;#P message 777 285 59 196617 dump more;#P message 741 285 33 196617 dump;#P window linecount 4;#P comment 555 346 289 196617 <<- NOTE: if using ambi.weight~ to manage the balance of signals at different orders \, remember to set the 'preset' of ambi.decode~ to "none" (no weights) \, otherwise you'll be doubling up the weight multiplications!;#P window linecount 1;#P newex 337 318 213 196617 ambi.weight~ 2d 3rd;#P newex 465 175 64 196617 phasor~ 0.5;#P newex 388 177 64 196617 phasor~ 0.3;#P comment 16 63 300 196617 www.grahamwakefield.net;#P comment 16 50 300 196617 Graham Wakefield \, March 2006;#P newex 698 72 108 196617 ambi.conventions.help;#P window linecount 4;#P comment 16 100 289 196617 ambi.weight~ balances the components of an Ambisonic encoded soundfield per order \, either using a set of pre-defined weights as recommended in the literature \, or by a user-defined set of weights using the 'weights' message.;#P window setfont "Sans Serif" 20.;#P window linecount 1;#P comment 16 21 301 196628 Ambisonic Decoding Weights;#P window setfont "Sans Serif" 9.;#P window linecount 4;#P comment 518 30 300 196617 Inspired by work on a C++ implementation by Jorge Castellanos \, Florian Hollerweger and Graham Wakefield \, using the CSL framework developed at MAT/CREATE \, UCSB (www.create.ucsb.edu/CSL);#P window linecount 1;#P comment 334 510 346 196617 Output channel orientations (for a horizontal ring layout);#P newex 337 205 35 196617 *~ 1.;#P newex 569 483 105 196617 dac~ 1 2 3 4 5 6 7 8;#P window linecount 3;#P comment 546 469 13 196617 WNW;#P comment 489 469 13 196617 SSW;#P comment 461 469 13 196617 SSE;#P comment 433 469 13 196617 ESE;#P user meter~ 533 410 546 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 505 410 518 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 477 410 490 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 449 410 462 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 421 410 434 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 393 410 406 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 365 410 378 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P user meter~ 337 410 350 506 50 0 168 0 103 103 103 255 153 0 255 0 0 217 217 0 153 186 0 12 3 3 3 3;#P comment 516 469 13 196617 WSW;#P comment 406 469 13 196617 ENE;#P comment 378 469 13 196617 NNE;#P window linecount 1;#P newex 337 345 212 196617 ambi.decode~ 2d 3rd 8 none;#P user number~ 465 222 514 237 9 3 3 2 0. 0. 0 0. 250 0. 0 0 0 221 221 221 222 222 222 0 0 0;#P user number~ 388 222 437 237 9 3 3 2 0. 0. 0 0. 250 0. 0 0 0 221 221 221 222 222 222 0 0 0;#P newex 465 197 44 196617 *~ 360;#P newex 388 199 44 196617 *~ 360;#P newex 337 247 210 196617 ambi.encode~ 2d 3rd degrees;#P newex 337 177 34 196617 pink~;#P window linecount 3;#P comment 350 469 13 196617 NNW;#P user panel 335 268 218 73;#X brgb 208 228 254;#X frgb 84 172 230;#X border 2;#X rounded 0;#X shadow 0;#X done;#P hidden connect 47 0 43 0;#P hidden connect 51 0 43 0;#P hidden connect 50 0 43 0;#P hidden connect 46 0 43 0;#P hidden connect 45 0 43 0;#P hidden connect 49 0 43 0;#P hidden connect 43 0 44 0;#P connect 2 0 25 0;#P connect 25 0 3 0;#P fasten 38 0 35 0 782 313 342 313;#P fasten 37 0 35 0 746 312 342 312;#P fasten 60 0 35 0 574 304 342 304;#P fasten 58 1 35 0 722 308 342 308;#P connect 3 0 35 0;#P connect 35 0 8 0;#P connect 8 0 12 0;#P connect 8 1 13 0;#P connect 3 1 35 1;#P connect 35 1 8 1;#P connect 33 0 4 0;#P connect 4 0 6 0;#P connect 8 2 14 0;#P connect 3 2 35 2;#P connect 35 2 8 2;#P connect 8 3 15 0;#P connect 3 3 35 3;#P connect 35 3 8 3;#P fasten 4 0 3 1 393 218 442 218;#P connect 8 4 16 0;#P connect 34 0 5 0;#P connect 5 0 7 0;#P connect 3 4 35 4;#P connect 35 4 8 4;#P connect 8 5 17 0;#P connect 3 5 35 5;#P connect 35 5 8 5;#P connect 8 6 18 0;#P connect 8 7 19 0;#P connect 3 6 35 6;#P connect 35 6 8 6;#P fasten 5 0 3 2 470 218 542 218;#P connect 59 0 60 0;#P fasten 41 0 24 0 691 463 574 463;#P fasten 42 0 24 0 761 463 574 463;#P fasten 8 0 24 0 342 398 574 398;#P fasten 8 1 24 1 370 398 587 398;#P fasten 8 2 24 2 398 398 600 398;#P fasten 8 3 24 3 426 398 613 398;#P fasten 8 4 24 4 454 398 626 398;#P fasten 8 5 24 5 482 398 639 398;#P fasten 8 6 24 6 510 398 652 398;#P fasten 8 7 24 7 538 398 665 398;#P pop;