<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="_c74_vig.xsl" type="text/xsl"?>
<vignette name="The Folder Object">
<header1>The Folder Object</header1>
<bodytext>
The Folder object is a <o>js</o> “external object” defined in the Max object called jsfolder. It is used to iterate through files in a folder.
</bodytext>
<header2>Folder Constructor</header2>
<code>
  f = new Folder(pathname);
</code>
<bodytext>
pathname can either be the name of a folder in the search path or a complete pathname using Max path syntax.
</bodytext>
<bodytext>
<b>Example:</b>
</bodytext>
<code>
  f = new Folder("patches");    
  // would try to find the patches folder in the search path
  f = new Folder("Disk:/folder1/folder2");  
  // uses an absolute path
</code>
<bodytext>
After creating a Folder object, you'll probably want to restrict the files you see while traversing it by setting the typelist property:
</bodytext>
<code>
  f.typelist = [ "iLaF" , "maxb" , "TEXT" ]; 
  // typical max files
</code>
<bodytext>
Check the file max-fileformats.txt inside the init folder in the Cycling ’74 folder for filetype codes and their associated extensions.
</bodytext>
<bodytext>
As a Folder object traverses through the files, you can find out information about the current file using its file properties. You can also determine whether you've looked at all properties by testing the end property. The following code prints the names of all files found in the folder.
</bodytext>
<code>
  while (!f.end) {
    post(f.filename);
    post();
    f.next();
  }
</code>
<bodytext>
To finish with the Folder object, you can either delete it, or send it the close message if you might want to reuse it.
</bodytext>
<code>
  f.close ();
</code>
<header2>Folder Properties</header2>
<bodytext>
Two types of properties of a Folder are available: some refer to the current file within the folder, and some refer to the Folder object’s state. Most of these properties are read-only.
</bodytext>
<bodytext>
 Folder State Properties:
</bodytext>
<code>
  <b>end</b> (<i>Boolean, get</i>)
</code>
<bodytext>
Non-zero (true) if there are no more files to examine in the folder, or if the pathname argument to the Folder object didn’t find a folder.
</bodytext>
<code>
  <b>count</b> (<i>Number, get</i>)
</code>
<bodytext>
The total number of files of the specified type(s) contained in the folder.
</bodytext>
<code>
  <b>pathname</b> (<i>String, get</i>)
</code>
<bodytext>
The full pathname of the folder
</bodytext>
<code>
  <b>typelist</b> (<i>Array of Strings, get/set</i>)
</code>
<bodytext>
The list of file types that will be used to find files in the folder. To search for all files (the default), set the typelist property to an empty array.
</bodytext>
<bodytext>
Current File Properties:
</bodytext>
<code>
  <b>filename</b> (<i>String, get</i>)
</code>
<bodytext>
The name of the current file.
</bodytext>
<code>
  <b>moddate</b> (<i>Array, get</i>)
</code>
<bodytext>
An array containing the values year, month, day, hour, minute, and second with the last modified date of the current file. These values can be used to create a Javascript Date object.
</bodytext>
<code>
  <b>filetype</b> (<i>String, get</i>)
</code>
<bodytext>
The four-character code associated with the current file's filetype. These codes are listed in the file max-fileformats.txt, which is located at /Library/Application Support/Cycling ’74 on Macintosh and C:\Program Files\Common Files\Cycling ’74 on Windows. If there is no mapping for the file's extension, a nil value is returned.
</bodytext>
<code>
  <b>extension</b> (<i>String, get</i>)
</code>
<bodytext>
The extension of the current file's name, including the period. If there are no characters after the period, a nil value is returned.
</bodytext>
<header2>
Folder Methods
</header2>
<code>
  <b>reset</b> (<i></i>)
</code>
<bodytext>
Start iterating at the beginning of the list of files. Re-opens the folder if it was previously closed with the close() function.
</bodytext>
<code>
  <b>next</b> (<i></i>)
</code>
<bodytext>
Moves to the next file.
</bodytext>
<code>
  <b>close</b> (<i></i>)
</code>
<bodytext>
Closes the folder. To start using it again, call the reset() function.
</bodytext>
</vignette>
