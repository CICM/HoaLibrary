<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="_c74_vig.xsl" type="text/xsl"?>
<vignette name="The jsui Object">
<header1>
The jsui Object
</header1>
<bodytext>
The following section describes properties and methods that are specific to <o>jsui</o>. 
See 
<link type="vignette" module="js" name="jsmaxobject">the Max Object</link>
section on the <o>js</o> Object 
for properties and methods that are common to both the <o>js</o> and <o>jsui</o> object.
</bodytext>
<header2>
 jsui Specific Properties
</header2>
<code>
  <b>sketch</b> (<i>Sketch, get</i>)
</code>
<bodytext>
An instance of Sketch which may be drawn into. A simple example is below. See 
<link type="vignette" module="js" name="jssketchobject">the Sketch Object</link>
for a complete description of the properties and methods of the Sketch object.
</bodytext>
<code>
  function bang() 
  {
    sketch.glclear();
    sketch.glcolor(0.5,0.7,0.3);
    sketch.moveto(0.25,-0.25);
    sketch.circle(0.3);
    refresh();
  }
</code>
<header2>
jsui Specific Methods
</header2>
<code>
  <b>refresh</b> (<i></i>)
</code>
<bodytext>
copies the contents of this.sketch to the screen.
</bodytext>
<header2>
jsui Event Handler methods
</header2>
<bodytext>
Since the <o>jsui</o> object is a user interface object, it can receive and process user interface events. Currently the only user interface events which are supported are related to mouse activity and resizing off the <o>jsui</o> object. If the following methods are defined by your Javascript code, they will be called to handle these user interface events. All mouse events handlers should be defined with have a standard form of 
</bodytext>
<code>
  function on&lt;eventname&gt; (x, y, button, modifier1, shift, capslock, option, modifier2)
  {
    // do something
  }
</code>
<bodytext>
The modifier1 argument is the command key state on Macintosh, and the control key state on PC, and the modifier2 argument is the control key state on Macintosh, and the right button state on PC. Modifier state is 1 if down/held, or 0 if not. If your event handler is not concerned with any trailing arguments, they can be omitted. 
</bodytext>
<bodytext>
One potentially confusing thing is that mouse events are in absolute screen coordinates, with (0,0) as left top, and (width, height) as right bottom corners of the <o>jsui</o> object,  while Sketch's drawing coordinates are in relative world coordinates, with (0,0) as the center, +1 top, -1 bottom,  and x coordinates using a uniform scale based on the y coordinates. To convert between screen and world coordinates, use sketch.screentoworld(x,y) and sketch.worldtoscreen(x,y,z). For example,
</bodytext>
<code>
  function onclick (x, y)
  {
    sketch.moveto(sketch.screentoworld(x,y));
    sketch.framecircle(0.1);
    refresh();
  }
</code>
<bodytext>
<b>onclick</b> (<i>x, y, button, mod1, shift, caps, opt, mod2</i>)
</bodytext>
<bodytext>
If defined, will receive all initial click events. The button argument will always be on.
</bodytext>
<code>
  <b>ondblclick</b> (<i>x, y, button, mod1, shift, caps, opt, mod2</i>)
</code>
<bodytext>
If defined, will receive all double click events. The button argument will always be on.
</bodytext>
<code>
  <b>ondrag</b> (<i>x, y, button, mod1, shift, caps, opt, mod2</i>)
</code>
<bodytext>
If defined, will receive all dragging events. The button argument will be on while dragging, and off when the dragging has stopped.
</bodytext>
<code>
  <b>onidle</b> (<i>x, y, button, mod1, shift, caps, opt, mod2</i>)
</code>
<bodytext>
If defined, will receive all idle mouse events while the mouse is over the rectangle occupied by <o>jsui</o> object. The button argument will always be off.
</bodytext>
<code>
  <b>onidleout</b> (<i>x, y, button, mod1, shift, caps, opt, mod2</i>)
</code>
<bodytext>
If defined, will receive the first idle mouse event as the mouse leaves the rectangle occupied by the <o>jsui</o> object. The button argument will always be off.
</bodytext>
<code>
  <b>onresize</b> (<i>width, height</i>)
</code>
<bodytext>
If defined, will receive any resize events with the new width and height.
</bodytext>
</vignette>
