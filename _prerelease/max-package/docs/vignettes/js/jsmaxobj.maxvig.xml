<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="_c74_vig.xsl" type="text/xsl"?>
<vignette name="The Maxobj Object">
<header1>The Maxobj Object</header1>
<bodytext>
A Maxobj is a Javascript representation of a Max object in a patcher. It is returned by various methods of a Javascript Patcher object, such as newobject().One important thing to keep in mind about a Maxobj is that it could eventually refer to an object that no longer exists if the underlying Max object is freed. The valid property can be used to test for this condition.
</bodytext>
<a name="maxobjectproperties" />
<header2>Maxobj Properties</header2>
<code>
  <b>rect</b> (<i>Array, get/set</i>)
</code>
<bodytext>
The location of an object in a patcher. When the object's rectangle is changed, it will move on screen if it is visible. The coordinates are stored in the following order: left, top, right, bottom.
</bodytext>
<code>
  <b>maxclass</b> (<i>String, get</i>)
</code>
<bodytext>
The Max class (as opposed to the Javascript class, which is "Maxobj" and accessed via the standard class property) of the object.
</bodytext>
<code>
  <b>patcher</b> (<i>Patcher, get</i>)
</code>
<bodytext>
The Patcher object that contains the Maxobj
</bodytext>
<code>
  <b>hidden</b> (<i>Boolean, get/set</i>)
</code>
<bodytext>
Is the object set to be hidden in a locked patcher?
</bodytext>
<code>
  <b>colorindex</b> (<i>Number, set/get</i>)
</code>
<bodytext>
If the object is set to use one of the standard 16 colors, this property is the index of the color
</bodytext>
<code>
  <b>nextobject</b> (<i>Maxobj, get</i>)
</code>
<bodytext>
If there is another object after this one in the Patcher's list of objects, this property returns it, otherwise it returns a nil value
</bodytext>
<code>
  <b>varname</b> (<i>String, get/set</i>)
</code>
<bodytext>
The patcher-specific name of the object, as set with the Name... dialog
</bodytext>
<code>
  <b>canhilite</b> (<i>Boolean, get</i>)
</code>
<bodytext>
Whether the object can be selected for text entry (a number box would be an example of an object whose canhilite property returns true)
</bodytext>
<code>
  <b>background</b> (<i>Boolean, get/set</i>)
</code>
<bodytext>
Whether the object is in the Patcher's background layer
</bodytext>
<code>
  <b>ignoreclick</b> (<i>Boolean, get/set</i>)
</code>
<bodytext>
Whether the object ignores clicks
</bodytext>
<code>
  <b>selected</b> (<i>Boolean, get</i>)
</code>
<bodytext>
Whether the object is selected in an unlocked patcher window.
</bodytext>
<code>
  <b>js</b> (<i>jsthis, get</i>)
</code>
<bodytext>
If the Maxobj refers to an object is of Max class js, this returns the associated <b>jsthis</b> object
</bodytext>
<code>
  <b>valid</b> (<i>Boolean, get</i>)
</code>
<bodytext>
Returns whether the Maxobj refers to a valid Max object
</bodytext>
<header2>Maxobj Methods</header2>
<bodytext>
Perhaps the most powerful thing about a Maxobj is that you can send any message to a Maxobj that you can send to a Max object in Max as if you were invoking a method on the object in Javascript. For example, if you had a number box Maxobj and you wanted to set its value to 23 without outputting the value, you could do this:
</bodytext>
<code>
  n.set(23);
</code>
<bodytext>
Note that certain words such as int, float, and delete are keywords in Javascript, and you will need to use either array notation or the message method for such reserved words.  For example: 
</bodytext>
<code>
  
  n.message("int", 23);
  //or
  n["int"](23);
</code>
<bodytext>
The following methods are common to all Maxobj objects. 
</bodytext>
<code>
    <b>message</b> (<i>string, …</i>)
</code>
<bodytext>
Sends the object the message specified by the string, followed by any additional arguments provided. This is useful for sending messages to object which dynamically dispatch messages with the “anything” message, as is the case for instances of js, jsui, lcd, and others.
</bodytext>
<code>
    <b>help</b> (<i></i>)
</code>
<bodytext>
Opens a help file describing the object, if it exists
</bodytext>
<code>
  <b>subpatcher</b> (<i>index</i>)
</code>
<bodytext>
If the object contains a patcher, this function returns a (Javascript) Patcher object. The optional index is used for specifying an instance number, which only applies to poly~ objects. If the object does not contain a subpatcher, a nil value is returned.
</bodytext>
<code>
  <b>understands</b> (<i>string</i>)
</code>
<bodytext>
Returns a Boolean value if the object has an entry in its message list for the message specified by the string. If the entry is not a message that can be sent by a user within Max (i.e., it's a C-level “untyped” message), false is returned. This doesn’t work for messages which are dynamically dispatched with the “anything” message, as is the case for instances of js, jsui, lcd, and others.
</bodytext>
</vignette>
