<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="_c74_vig.xsl" type="text/xsl"?>
<vignette name="jit.gl.lua OpenGL Bindings" order="1">

<header1>jit.gl.lua OpenGL Bindings</header1>
<bodytext>
The OpenGL bindings for <o>jit.gl.lua</o> are found in the <m>opengl</m> module, which is built-in to the object.  To access the bindings, simpply use the built-in Lua function, <m>require</m>, to load the module as follows:
</bodytext>
<code>
<span style="color:#0c7f3d;">-- load in the module and set some aliases</span>
<span style="color:#be230d;">local</span> gl = require(<span style="color:#9a32d2">"opengl"</span>)
<span style="color:#be230d;">local</span> GL = gl
</code>
<bodytext>
The idiom above allows us to write code that more closely resembles C-style OpenGL code.  For the OpenGL Utility (GLU) functions see the For the standard OpenGL bindings, see the <link module="lua" name="jit_gl_lua_opengl_glu_bindings" type="vignette"><i>jit.gl.lua OpenGL GLU Bindings</i></link>.
</bodytext>

<!--Begin OpenGL Bindings-->
<code><m>Accum</m>(op, value)</code>
<bodytext>
 Operate on the accumulation buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glAccum.xml">glAccum</a></p>
<ul>
<li><m>op</m> Specifies the accumulation buffer operation. Symbolic constants GL_ACCUM, GL_LOAD,  GL_ADD, GL_MULT, and GL_RETURN are accepted.</li>
<li><m>value</m> Specifies a floating-point value used in the accumulation buffer operation.  op determines how value is used.</li>
</ul>
</bodytext>

<code><m>AlphaFunc</m>(func, ref)</code>
<bodytext>
 Specify the alpha test function
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glAlphaFunc.xml">glAlphaFunc</a></p>
<ul>
<li><m>func</m> Specifies the alpha comparison function.  Symbolic constants GL_NEVER, GL_LESS, GL_EQUAL, GL_LEQUAL,  GL_GREATER, GL_NOTEQUAL, GL_GEQUAL, and GL_ALWAYS are accepted.  The initial value is GL_ALWAYS</li>
<li><m>ref</m> Specifies the reference value that incoming alpha values are compared to.  This value is clamped to the range 0 1 , where 0 represents the lowest  possible alpha value and 1 the highest possible value. The initial  reference value is 0</li>
</ul>
</bodytext>

<code><m>Begin</m>(mode)</code>
<bodytext>
 Delimit the vertices of a primitive or a group of like primitives
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glBegin.xml">glBegin</a></p>
<ul>
<li><m>mode</m> Specifies the primitive or primitives that will be created from vertices  presented between glBegin and the subsequent glEnd. Ten symbolic constants  are accepted: GL_POINTS, GL_LINES, GL_LINE_STRIP, GL_LINE_LOOP,  GL_TRIANGLES, GL_TRIANGLE_STRIP, GL_TRIANGLE_FAN, GL_QUADS, GL_QUAD_STRIP,  and GL_POLYGON.</li>
</ul>
</bodytext>

<code><m>BlendFunc</m>(sfactor, dfactor)</code>
<bodytext>
 Specify pixel arithmetic
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glBlendFunc.xml">glBlendFunc</a></p>
<ul>
<li><m>sfactor</m> Specifies how the red, green, blue, and alpha source blending factors  are computed. The following symbolic constants are accepted: GL_ZERO,  GL_ONE, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR, GL_DST_COLOR,  GL_ONE_MINUS_DST_COLOR, GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA,  GL_DST_ALPHA, GL_ONE_MINUS_DST_ALPHA, GL_CONSTANT_COLOR,  GL_ONE_MINUS_CONSTANT_COLOR, GL_CONSTANT_ALPHA,  GL_ONE_MINUS_CONSTANT_ALPHA, and GL_SRC_ALPHA_SATURATE.  The initial value is GL_ONE.</li>
<li><m>dfactor</m> Specifies how the red, green, blue, and alpha destination blending  factors are computed.  The same constants are accepted as for sfactor.</li>
</ul>
</bodytext>

<code><m>CallList</m>(list)</code>
<bodytext>
 Execute a display list
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCallList.xml">glCallList</a></p>
<ul>
<li><m>list</m> Specifies the integer name of the display list to be executed.</li>
</ul>
</bodytext>

<code><m>Clear</m>(mask)</code>
<bodytext>
 Clear buffers to preset values
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClear.xml">glClear</a></p>
<ul>
<li><m>mask</m> Bitwise OR of masks that indicate the buffers to be cleared.  The four masks are GL_COLOR_BUFFER_BIT, GL_DEPTH_BUFFER_BIT,  GL_ACCUM_BUFFER_BIT, and GL_STENCIL_BUFFER_BIT.</li>
</ul>
</bodytext>

<code><m>ClearAccum</m>(...)</code>
<bodytext>
 Specify clear values for the accumulation buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClearAccum.xml">glClearAccum</a></p>
<ul>
<li><m>...</m> Either a 4 numbers or a table specifying the red, green, blue, and  alpha values used when the accumulation buffer is cleared.  The initial values are all 0.</li>
</ul>
</bodytext>

<code><m>ClearColor</m>(...)</code>
<bodytext>
 Specify clear values for the color buffers
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClearColor.xml">glClearColor</a></p>
<ul>
<li><m>...</m> Either a 4 numbers or a table specifying the red, green, blue, and  alpha values used when the color buffers are cleared.  The initial values are all 0.</li>
</ul>
</bodytext>

<code><m>ClearDepth</m>(depth)</code>
<bodytext>
 Specify the clear value for the depth buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClearDepth.xml">glClearDepth</a></p>
<ul>
<li><m>depth</m> Specifies the depth value used when the depth buffer is cleared.  The initial value is 1.</li>
</ul>
</bodytext>

<code><m>ClearIndex</m>(c)</code>
<bodytext>
 Specify the clear value for the color index buffers
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClearIndex.xml">glClearIndex</a></p>
<ul>
<li><m>c</m> Specifies the index used when the color index buffers are cleared.  The initial value is 0.</li>
</ul>
</bodytext>

<code><m>ClearStencil</m>(c)</code>
<bodytext>
 Specify the clear value for the stencil buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClearStencil.xml">glClearStencil</a></p>
<ul>
<li><m>c</m> Specifies the index used when the stencil buffer is cleared.  The initial value is 0.</li>
</ul>
</bodytext>

<code><m>ClipPlane</m>(plane, equation)</code>
<bodytext>
 Specify a plane against which all geometry is clipped
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glClipPlane.xml">glClipPlane</a></p>
<ul>
<li><m>plane</m> Specifies which clipping plane is being positioned. Symbolic  names of the form GL_CLIP_PLANEi, where i is an integer  between 0 and GL_MAX_CLIP_PLANES -1 , are accepted.</li>
<li><m>equation</m> Specifies the address of an array of four double-precision  floating-point values. These values are interpreted as a  plane equation.</li>
</ul>
</bodytext>

<code><m>Color</m>(...)</code>
<bodytext>
 Set the current color
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glColor.xml">glColor</a></p>
<ul>
<li><m>...</m> Specify either 3 or 4 numbers or a table for new red, green,  blue and [alpha] values for the current color.  The default  value is (0, 0, 0, 1).</li>
</ul>
</bodytext>

<code><m>ColorMask</m>(...)</code>
<bodytext>
 Enable and disable writing of frame buffer color components
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glColorMask.xml">glColorMask</a></p>
<ul>
<li><m>...</m> Either 4 numbers or a table specifying whether red, green, blue,  and alpha can or cannot be written into the frame buffer. The  initial values are all GL_TRUE, indicating that the color  components can be written.</li>
</ul>
</bodytext>

<code><m>ColorMaterial</m>(face, mode)</code>
<bodytext>
 Cause a material color to track the current color
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glColorMaterial.xml">glColorMaterial</a></p>
<ul>
<li><m>face</m> Specifies whether front, back, or both front and back material parameters  should track the current color. Accepted values are GL_FRONT, GL_BACK, and  GL_FRONT_AND_BACK. The initial value is GL_FRONT_AND_BACK.</li>
<li><m>mode</m> Specifies which of several material parameters track the current color.  Accepted values are GL_EMISSION, GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, and  GL_AMBIENT_AND_DIFFUSE. The initial value is GL_AMBIENT_AND_DIFFUSE.</li>
</ul>
</bodytext>

<code><m>CopyPixels</m>(x, y, width, height, type)</code>
<bodytext>
 Copy pixels in the frame buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCopyPixels.xml">glCopyPixels</a></p>
<ul>
<li><m>x</m> Specify the x window coordinate of the lower left  corner of the rectangular region of pixels to be copied.</li>
<li><m>y</m> Specify the y window coordinate of the lower left  corner of the rectangular region of pixels to be copied.</li>
<li><m>width</m> Specify the horizontal dimensions of the rectangular region of pixels  to be copied. Both must be nonnegative.</li>
<li><m>height</m> Specify the vertical dimensions of the rectangular region of pixels  to be copied. Both must be nonnegative.</li>
<li><m>type</m> Specifies whether color values, depth values, or stencil values  are to be copied. Symbolic constants GL_COLOR, GL_DEPTH, and  GL_STENCIL are accepted.</li>
</ul>
</bodytext>

<code><m>CopyTexImage</m>(target, level, internalformat, x, y, width, [height], border)</code>
<bodytext>
 Copy pixels into a 1D or 2D texture image
<p>If no height argument is given, glCopyTexImage1D will be used, otherwise, glCopyTexImage2D  be used. Example usage:</p><p> 
<pre>
  1D case: gl.CopyTexImage(GL.TEXTURE_1D, 0, GL.RGBA, 0, 0, 128, 0)
  2D case: gl.CopyTexImage(GL.TEXTURE_2D, 0, GL.RGBA, 0, 0, 128, 128, 0)
 </pre>
</p><p> OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCopyTexImage1D.xml">glCopyTexImage1D</a>,  <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCopyTexImage2D.xml">glCopyTexImage2D</a></p>
<ul>
<li><m>target</m> Only relevant in the 2D case.  Specifies the target texture.  Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X,  GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y,  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.</li>
<li><m>level</m> Specifies the level-of-detail number. Level 0 is the base image level.  Level n is the nth mipmap reduction image.</li>
<li><m>internalformat</m> Specifies the internal format of the texture. See OpenGL documentation for  accepted values.</li>
<li><m>x</m> Specify the x window coordinate of the left corner of the row of pixels to be copied.</li>
<li><m>y</m> Specify the y window coordinate of the left corner of the row of pixels to be copied.</li>
<li><m>width</m> Specifies the width of the texture image. Must be 0 or 2 n + 2 border for some  integer n.</li>
<li><m>[height]</m> Specifies the height of the texture image. Must be 0 or 2 m + 2 border for some  integer m. The height of the texture image in the 1D case is 1.</li>
<li><m>border</m> Specifies the width of the border. Must be either 0 or 1.</li>
</ul>
</bodytext>

<code><m>CopyTexSubImage</m>(target, level, xoffset, [yoffset], x, y, width, [height])</code>
<bodytext>
 Copy a 1D or 2D texture subimage
<p>If no yoffset or height argument is given, glCopyTexSubImage1D will be used, otherwise, glCopyTexSubImage2D  be used. Example usage:</p><p> 
<pre>
  1D case: gl.glCopyTexSubImage(GL.TEXTURE_1D, 0, 32, 0, 0, 64)
  2D case: gl.glCopyTexSubImage(GL.TEXTURE_2D, 0, 16, 24, 0, 0, 128, 128)
 </pre>
</p><p> OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCopyTexSubImage1D.xml">glCopyTexSubImage1D</a>,  <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCopyTexSubImage2D.xml">glCopyTexSubImage2D</a></p>
<ul>
<li><m>target</m> Only relevant in the 2D case.  Specifies the target texture.  Must be GL_TEXTURE_2D, GL_TEXTURE_CUBE_MAP_POSITIVE_X,  GL_TEXTURE_CUBE_MAP_NEGATIVE_X, GL_TEXTURE_CUBE_MAP_POSITIVE_Y,  GL_TEXTURE_CUBE_MAP_NEGATIVE_Y, GL_TEXTURE_CUBE_MAP_POSITIVE_Z, or  GL_TEXTURE_CUBE_MAP_NEGATIVE_Z.</li>
<li><m>level</m> Specifies the level-of-detail number. Level 0 is the base image level.  Level n is the nth mipmap reduction image.</li>
<li><m>xoffset</m> Specifies a texel offset in the x direction within the texture array..</li>
<li><m>[yoffset]</m> Specifies a texel offset in the y direction within the texture array..</li>
<li><m>x</m> Specify the x window coordinate of the left corner of the row of pixels to be copied.</li>
<li><m>y</m> Specify the y window coordinate of the left corner of the row of pixels to be copied.</li>
<li><m>width</m> Specifies the width of the texture subimage.</li>
<li><m>[height]</m> Specifies the height of the texture subimage.</li>
</ul>
</bodytext>

<code><m>CullFace</m>(mode)</code>
<bodytext>
 Specify whether front- or back-facing facets can be culled
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glCullFace.xml">glCullFace</a></p>
<ul>
<li><m>mode</m> Specifies whether front- or back-facing facets are candidates for culling.  Symbolic constants GL_FRONT, GL_BACK, and GL_FRONT_AND_BACK are accepted.  The initial value is GL_BACK.</li>
</ul>
</bodytext>

<code><m>DeleteLists</m>(list, range)</code>
<bodytext>
 Delete a contiguous group of display lists
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glDeleteLists.xml">glDeleteLists</a></p>
<ul>
<li><m>list</m> Specifies the integer name of the first display list to delete.</li>
<li><m>range</m> Specifies the number of display lists to delete.</li>
</ul>
</bodytext>

<code><m>DepthFunc</m>(func)</code>
<bodytext>
 Specify the value used for depth buffer comparisons
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glDepthFunc.xml">glDepthFunc</a></p>
<ul>
<li><m>func</m> Specifies the depth comparison function. Symbolic constants GL_NEVER,  GL_LESS, GL_EQUAL, GL_LEQUAL, GL_GREATER, GL_NOTEQUAL, GL_GEQUAL,  and GL_ALWAYS are accepted. The initial value is GL_LESS.</li>
</ul>
</bodytext>

<code><m>DepthMask</m>(flag)</code>
<bodytext>
 Enable or disable writing into the depth buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glDepthMask.xml">glDepthMask</a></p>
<ul>
<li><m>flag</m> Specifies whether the depth buffer is enabled for writing. If flag is  GL_FALSE, depth buffer writing is disabled. Otherwise, it is enabled.  Initially, depth buffer writing is enabled.</li>
</ul>
</bodytext>

<code><m>DepthRange</m>(near, far)</code>
<bodytext>
 Specify mapping of depth values from normalized device coordinates to window coordinates
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glDepthRange.xml">glDepthRange</a></p>
<ul>
<li><m>near</m> Specifies the mapping of the near clipping plane to window coordinates.  The initial value is 0.</li>
<li><m>far</m> Specifies the mapping of the far clipping plane to window coordinates.  The initial value is 1.</li>
</ul>
</bodytext>

<code><m>Disable</m>(cap)</code>
<bodytext>
 Disable server-side GL capabilities
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glEnable.xml">glDisable</a></p>
<ul>
<li><m>cap</m> Specifies a symbolic constant indicating a GL capability.</li>
</ul>
</bodytext>

<code><m>DrawBuffer</m>(mode)</code>
<bodytext>
 Specify which color buffers are to be drawn into
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glDrawBuffer.xml">glDrawBuffer</a></p>
<ul>
<li><m>mode</m> Specifies up to four color buffers to be drawn into. Symbolic constants  GL_NONE, GL_FRONT_LEFT, GL_FRONT_RIGHT, GL_BACK_LEFT, GL_BACK_RIGHT,  GL_FRONT, GL_BACK, GL_LEFT, GL_RIGHT, GL_FRONT_AND_BACK, and GL_AUXi,  where i is between 0 and the value of GL_AUX_BUFFERS minus 1, are  accepted. (GL_AUX_BUFFERS is not the upper limit; use glGet to query  the number of available aux buffers.) The initial value is GL_FRONT  for single-buffered contexts, and GL_BACK for double-buffered contexts</li>
</ul>
</bodytext>

<code><m>EdgeFlag</m>(flag)</code>
<bodytext>
 Flag edges as either boundary or nonboundary
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glEdgeFlag.xml">glEdgeFlag</a></p>
<ul>
<li><m>flag</m> Specifies the current edge flag value, either GL_TRUE or GL_FALSE.  The initial value is GL_TRUE.</li>
</ul>
</bodytext>

<code><m>Enable</m>(cap)</code>
<bodytext>
 Enable server-side GL capabilities
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glEnable.xml">glEnable</a></p>
<ul>
<li><m>cap</m> Specifies a symbolic constant indicating a GL capability.</li>
</ul>
</bodytext>

<code><m>End</m>()</code>
<bodytext>
 Delimit the vertices of a primitive or a group of like primitives
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glBegin.xml">glEnd</a></p>
<ul>
</ul>
</bodytext>

<code><m>EndList</m>()</code>
<bodytext>
 End the creation or replacement of a display list
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glNewList.xml">glEndList</a></p>
<ul>
</ul>
</bodytext>

<code><m>Finish</m>()</code>
<bodytext>
 Block until all GL execution is complete
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glFinish.xml">glFinish</a></p>
<ul>
</ul>
</bodytext>

<code><m>Flush</m>()</code>
<bodytext>
 Force execution of GL commands in finite time
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glFlush.xml">glFlush</a></p>
<ul>
</ul>
</bodytext>

<code><m>Fog</m>(pname, ...)</code>
<bodytext>
 Specify fog parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glFog.xml">glFog</a></p>
<ul>
<li><m>pname</m> Specifies a single-valued fog parameter. GL_FOG_MODE, GL_FOG_DENSITY,  GL_FOG_START, GL_FOG_END, GL_FOG_INDEX, and GL_FOG_COORD_SRC are  accepted.</li>
<li><m>...</m> Specifies the value that pname will be set to.</li>
</ul>
</bodytext>

<code><m>FrontFace</m>(mode)</code>
<bodytext>
 Define front- and back-facing polygons
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glFrontFace.xml">glFrontFace</a></p>
<ul>
<li><m>mode</m> Specifies the orientation of front-facing polygons. GL_CW and GL_CCW  are accepted. The initial value is GL_CCW.</li>
</ul>
</bodytext>

<code><m>Frustum</m>(left, right, bottom, top, near, far)</code>
<bodytext>
 Multiply the current matrix by a perspective matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glFrustum.xml">glFrustum</a></p>
<ul>
<li><m>left</m> Specify the coordinates for the left vertical clipping plane.</li>
<li><m>right</m> Specify the coordinates for the right vertical clipping plane.</li>
<li><m>bottom</m> Specify the coordinates for the top horizontal clipping plane.</li>
<li><m>top</m> Specify the coordinates for the bottom horizontal clipping plane.</li>
<li><m>near</m> Specify the distance to the near depth clipping plane. Must be positive.</li>
<li><m>far</m> Specify the distance to the far depth clipping plane. Must be positive.</li>
</ul>
</bodytext>

<code><m>GenLists</m>(range)</code>
<bodytext>
 Generate a contiguous set of empty display lists
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGenLists.xml">glGenLists</a></p>
<ul>
<li><m>range</m> Specifies the number of contiguous empty display lists to be generated.</li>
</ul>
</bodytext>

<code><m>Get</m>(pname)</code>
<bodytext>
 Return the value or values of a selected parameter
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGet.xml">glGet</a></p>
<ul>
<li><m>pname</m> Specifies the parameter value to be returned.  See documentation for the list of accepted values.</li>
</ul>
</bodytext>

<code><m>GetClipPlane</m>(plane)</code>
<bodytext>
 Return the coefficients of the specified clipping plane
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetClipPlane.xml">glGetClipPlane</a></p>
<ul>
<li><m>plane</m> Specifies a clipping plane. The number of clipping planes depends on the  implementation, but at least six clipping planes are supported. They are  identified by symbolic names of the form GL_CLIP_PLANE i where i ranges  from 0 to the value of GL_MAX_CLIP_PLANES - 1.</li>
</ul>
</bodytext>

<code><m>GetError</m>()</code>
<bodytext>
 Return error information
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetError.xml">glGetError</a></p>
<ul>
</ul>
</bodytext>

<code><m>GetLight</m>(light, pname)</code>
<bodytext>
 Return light source parameter values
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetLight.xml">glGetLight</a></p>
<ul>
<li><m>light</m> Specifies a light source. The number of possible lights depends  on the implementation, but at least eight lights are supported.  They are identified by symbolic names of the form GL_LIGHTi  where i ranges from 0 to the value of GL_MAX_LIGHTS - 1.</li>
<li><m>pname</m> Specifies a light source parameter for light. Accepted symbolic  names are GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_POSITION,  GL_SPOT_DIRECTION, GL_SPOT_EXPONENT, GL_SPOT_CUTOFF,  GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and  GL_QUADRATIC_ATTENUATION.</li>
</ul>
</bodytext>

<code><m>GetMaterial</m>(target, pname)</code>
<bodytext>
 Return material parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetMaterial.xml">glGetMaterial</a></p>
<ul>
<li><m>target</m> Specifies which of the two materials is being queried. GL_FRONT or GL_BACK  are accepted, representing the front and back materials, respectively.</li>
<li><m>pname</m> Specifies the material parameter to return. GL_AMBIENT, GL_DIFFUSE,  GL_SPECULAR, GL_EMISSION, GL_SHININESS, and GL_COLOR_INDEXES are  accepted.</li>
</ul>
</bodytext>

<code><m>GetString</m>(name)</code>
<bodytext>
 Return a string describing the current GL connection
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetString.xml">glGetString</a></p>
<ul>
<li><m>name</m> Specifies a symbolic constant, one of GL_VENDOR, GL_RENDERER, GL_VERSION,  GL_SHADING_LANGUAGE_VERSION, or GL_EXTENSIONS.</li>
</ul>
</bodytext>

<code><m>GetTexEnv</m>(target, pname)</code>
<bodytext>
 Return texture environment parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetTexEnv.xml">glGetTexEnv</a></p>
<ul>
<li><m>target</m> Specifies a texture environment. May be GL_TEXTURE_ENV,  GL_TEXTURE_FILTER_CONTROL, or GL_POINT_SPRITE.</li>
<li><m>pname</m> Specifies the symbolic name of a texture environment parameter. Accepted  values are GL_TEXTURE_ENV_MODE, GL_TEXTURE_ENV_COLOR, GL_TEXTURE_LOD_BIAS,  GL_COMBINE_RGB, GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB,  GL_SRC0_ALPHA, GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB,  GL_OPERAND1_RGB, GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA,  GL_OPERAND2_ALPHA, GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.</li>
</ul>
</bodytext>

<code><m>GetTexGen</m>(coord, pname)</code>
<bodytext>
 Return texture coordinate generation parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetTexGen.xml">glGetTexGen</a></p>
<ul>
<li><m>coord</m> Specifies a texture coordinate. Must be GL_S, GL_T, GL_R, or GL_Q.</li>
<li><m>pname</m> Specifies the symbolic name of the value(s) to be returned. Must be  either GL_TEXTURE_GEN_MODE or the name of one of the texture generation  plane equations: GL_OBJECT_PLANE or GL_EYE_PLANE.</li>
</ul>
</bodytext>

<code><m>GetTexLevelParameter</m>(target, level, pname)</code>
<bodytext>
 Return texture parameter values for a specific level of detail
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetTexLevelParameter.xml">glGetTexLevelParameter</a></p>
<ul>
<li><m>target</m> Specifies the symbolic name of the target texture, either GL_TEXTURE_1D, GL_TEXTURE_2D,  GL_TEXTURE_3D, GL_PROXY_TEXTURE_1D, GL_PROXY_TEXTURE_2D, GL_PROXY_TEXTURE_3D,  GL_TEXTURE_CUBE_MAP_POSITIVE_X, GL_TEXTURE_CUBE_MAP_NEGATIVE_X,  GL_TEXTURE_CUBE_MAP_POSITIVE_Y, GL_TEXTURE_CUBE_MAP_NEGATIVE_Y,  GL_TEXTURE_CUBE_MAP_POSITIVE_Z, GL_TEXTURE_CUBE_MAP_NEGATIVE_Z, or  GL_PROXY_TEXTURE_CUBE_MAP.</li>
<li><m>level</m> Specifies the level-of-detail number of the desired image. Level 0 is the base image level.  Level n is the nth mipmap reduction image.</li>
<li><m>pname</m> Specifies the symbolic name of a texture parameter. GL_TEXTURE_WIDTH, GL_TEXTURE_HEIGHT,  GL_TEXTURE_DEPTH, GL_TEXTURE_INTERNAL_FORMAT, GL_TEXTURE_BORDER, GL_TEXTURE_RED_SIZE,  GL_TEXTURE_GREEN_SIZE, GL_TEXTURE_BLUE_SIZE, GL_TEXTURE_ALPHA_SIZE,  GL_TEXTURE_LUMINANCE_SIZE, GL_TEXTURE_INTENSITY_SIZE, GL_TEXTURE_DEPTH_SIZE,  GL_TEXTURE_COMPRESSED, and GL_TEXTURE_COMPRESSED_IMAGE_SIZE are accepted.</li>
</ul>
</bodytext>

<code><m>GetTexParameter</m>(target, pname)</code>
<bodytext>
 Return texture parameter values
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glGetTexParameter.xml">glGetTexParameter</a></p>
<ul>
<li><m>target</m> Specifies the symbolic name of the target texture. GL_TEXTURE_1D, GL_TEXTURE_2D,  GL_TEXTURE_3D, and GL_TEXTURE_CUBE_MAP are accepted.</li>
<li><m>pname</m> Specifies the symbolic name of a texture parameter. GL_TEXTURE_MAG_FILTER,  GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MIN_LOD, GL_TEXTURE_MAX_LOD,  GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_WRAP_S,  GL_TEXTURE_WRAP_T, GL_TEXTURE_WRAP_R, GL_TEXTURE_BORDER_COLOR,  GL_TEXTURE_PRIORITY, GL_TEXTURE_RESIDENT, GL_TEXTURE_COMPARE_MODE,  GL_TEXTURE_COMPARE_FUNC, GL_DEPTH_TEXTURE_MODE, and GL_GENERATE_MIPMAP  are accepted.</li>
</ul>
</bodytext>

<code><m>Hint</m>(target, mode)</code>
<bodytext>
 Specify implementation-specific hints
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glHint.xml">glHint</a></p>
<ul>
<li><m>target</m> Specifies a symbolic constant indicating the behavior to be controlled.  GL_FOG_HINT, GL_GENERATE_MIPMAP_HINT, GL_LINE_SMOOTH_HINT,  GL_PERSPECTIVE_CORRECTION_HINT, GL_POINT_SMOOTH_HINT,  GL_POLYGON_SMOOTH_HINT, GL_TEXTURE_COMPRESSION_HINT, and  GL_FRAGMENT_SHADER_DERIVATIVE_HINT are accepted.</li>
<li><m>mode</m> Specifies a symbolic constant indicating the desired behavior.  GL_FASTEST, GL_NICEST, and GL_DONT_CARE are accepted.</li>
</ul>
</bodytext>

<code><m>Index</m>(c)</code>
<bodytext>
 Set the current color index
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glIndex.xml">glIndex</a></p>
<ul>
<li><m>c</m> Specifies the new value for the current color index.</li>
</ul>
</bodytext>

<code><m>IndexMask</m>(mask)</code>
<bodytext>
 Control the writing of individual bits in the color index buffers
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glIndex.xml">glIndexMask</a></p>
<ul>
<li><m>mask</m> Specifies a bit mask to enable and disable the writing of individual  bits in the color index buffers. Initially, the mask is all 1's.</li>
</ul>
</bodytext>

<code><m>InitNames</m>()</code>
<bodytext>
 Initialize the name stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glInitNames.xml">glInitNames</a></p>
<ul>
</ul>
</bodytext>

<code><m>IsEnabled</m>(cap)</code>
<bodytext>
 Test whether a capability is enabled
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glIsEnabled.xml">glIsEnabled</a></p>
<ul>
<li><m>cap</m> Specifies a symbolic constant indicating a GL capability.</li>
</ul>
</bodytext>

<code><m>IsList</m>(list)</code>
<bodytext>
 Determine if a name corresponds to a display list
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glIsList.xml">glIsList</a></p>
<ul>
<li><m>list</m> Specifies a symbolic constant indicating a GL capability.</li>
</ul>
</bodytext>

<code><m>IsTexture</m>(texture)</code>
<bodytext>
 Determine if a name corresponds to a texture
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glIsTexture.xml">glIsTexture</a></p>
<ul>
<li><m>texture</m> Specifies a value that may be the name of a texture.</li>
</ul>
</bodytext>

<code><m>Light</m>(light, pname, params)</code>
<bodytext>
 Set light source parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLight.xml">glLight</a></p>
<ul>
<li><m>light</m> Specifies a light. The number of lights depends on the implementation,  but at least eight lights are supported. They are identified by symbolic  names of the form GL_LIGHTi, where i ranges from 0 to the value of  GL_MAX_LIGHTS - 1.</li>
<li><m>pname</m> Specifies a light source parameter for light. GL_AMBIENT, GL_DIFFUSE,  GL_SPECULAR, GL_POSITION, GL_SPOT_CUTOFF, GL_SPOT_DIRECTION, GL_SPOT_EXPONENT,  GL_CONSTANT_ATTENUATION, GL_LINEAR_ATTENUATION, and GL_QUADRATIC_ATTENUATION are  accepted.</li>
<li><m>params</m> Specifies the value that parameter pname of light source light will be set to.</li>
</ul>
</bodytext>

<code><m>LightModel</m>(pname, params)</code>
<bodytext>
 Set the lighting model parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLightModel.xml">glLightModel</a></p>
<ul>
<li><m>pname</m> Specifies a single-valued lighting model parameter. GL_LIGHT_MODEL_LOCAL_VIEWER,  GL_LIGHT_MODEL_COLOR_CONTROL, and GL_LIGHT_MODEL_TWO_SIDE are accepted.</li>
<li><m>params</m> Specifies the value that param will be set to.</li>
</ul>
</bodytext>

<code><m>LineStipple</m>(factor, pattern)</code>
<bodytext>
 Specify the line stipple pattern
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLineStipple.xml">glLineStipple</a></p>
<ul>
<li><m>factor</m> Specifies a multiplier for each bit in the line stipple pattern. If factor is  3, for example, each bit in the pattern is used three times before the next  bit in the pattern is used. factor is clamped to the range [1, 256] and  defaults to 1.</li>
<li><m>pattern</m> Specifies a 16-bit integer whose bit pattern determines which fragments of a  line will be drawn when the line is rasterized. Bit zero is used first; the  default pattern is all 1's.</li>
</ul>
</bodytext>

<code><m>LineWidth</m>(width)</code>
<bodytext>
 Specify the width of rasterized lines
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLineWidth.xml">glLineWidth</a></p>
<ul>
<li><m>width</m> Specifies the width of rasterized lines. The initial value is 1.</li>
</ul>
</bodytext>

<code><m>ListBase</m>(base)</code>
<bodytext>
 Set the display-list base for glCallLists
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glListBase.xml">glListBase</a></p>
<ul>
<li><m>base</m> Specifies an integer offset that will be added to glCallLists offsets  to generate display-list names. The initial value is 0.</li>
</ul>
</bodytext>

<code><m>LoadIdentity</m>()</code>
<bodytext>
 Replace the current matrix with the identity matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLoadIdentity.xml">glLoadIdentity</a></p>
<ul>
</ul>
</bodytext>

<code><m>LoadMatrix</m>(m)</code>
<bodytext>
 Replace the current matrix with the specified matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLoadMatrix.xml">glLoadMatrix</a></p>
<ul>
<li><m>m</m> Specifies 16 consecutive values, which are used as the elements of a  4×4 column-major matrix.</li>
</ul>
</bodytext>

<code><m>LoadName</m>(name)</code>
<bodytext>
 Load a name onto the name stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLoadName.xml">glLoadName</a></p>
<ul>
<li><m>name</m> Specifies a name that will replace the top value on the name stack.</li>
</ul>
</bodytext>

<code><m>LogicOp</m>(opcode)</code>
<bodytext>
 Specify a logical pixel operation for color index rendering
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glLogicOp.xml">glLogicOp</a></p>
<ul>
<li><m>opcode</m> Specifies a symbolic constant that selects a logical operation.  The following symbols are accepted: GL_CLEAR, GL_SET, GL_COPY,  GL_COPY_INVERTED, GL_NOOP, GL_INVERT, GL_AND, GL_NAND, GL_OR,  GL_NOR, GL_XOR, GL_EQUIV, GL_AND_REVERSE, GL_AND_INVERTED,  GL_OR_REVERSE, and GL_OR_INVERTED. The initial value is GL_COPY.</li>
</ul>
</bodytext>

<code><m>Material</m>(face, pname, params)</code>
<bodytext>
 Specify material parameters for the lighting model
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glMaterial.xml">glMaterial</a></p>
<ul>
<li><m>face</m> Specifies which face or faces are being updated. Must be one of GL_FRONT,  GL_BACK, or GL_FRONT_AND_BACK.</li>
<li><m>pname</m> Specifies the material parameter of the face or faces that is being updated. Must  be one of GL_AMBIENT, GL_DIFFUSE, GL_SPECULAR, GL_EMISSION, GL_SHININESS,  GL_AMBIENT_AND_DIFFUSE, or GL_COLOR_INDEXES.</li>
<li><m>params</m> Specifies a pointer to the value or values that pname will be set to.</li>
</ul>
</bodytext>

<code><m>MatrixMode</m>(mode)</code>
<bodytext>
 Specify which matrix is the current matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glMatrixMode.xml">glMatrixMode</a></p>
<ul>
<li><m>mode</m> Specifies which matrix stack is the target for subsequent  matrix operations. Three values are accepted: GL_MODELVIEW,  GL_PROJECTION, and GL_TEXTURE. The initial value is GL_MODELVIEW.  Additionally, if the ARB_imaging extension is supported, GL_COLOR  is also accepted.</li>
</ul>
</bodytext>

<code><m>MultMatrix</m>(m)</code>
<bodytext>
 Multiply the current matrix with the specified matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glMultMatrix.xml">glMultMatrix</a></p>
<ul>
<li><m>m</m> Specifies 16 consecutive values, which are used as the elements of a  4×4 column-major matrix.</li>
</ul>
</bodytext>

<code><m>NewList</m>(list, mode)</code>
<bodytext>
 Create or replace a display list
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glNewList.xml">glNewList</a></p>
<ul>
<li><m>list</m> Specifies the display-list name.</li>
<li><m>mode</m> Specifies the compilation mode, which can be GL_COMPILE or GL_COMPILE_AND_EXECUTE.</li>
</ul>
</bodytext>

<code><m>Normal</m>(...)</code>
<bodytext>
 Set the current normal vector
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glNormal.xml">glNormal</a></p>
<ul>
<li><m>...</m> Either a 3 numbers or a table specifying the x, y, and z coordinates  of the new current normal. The initial value of the current normal  is the unit vector, (0, 0, 1).</li>
</ul>
</bodytext>

<code><m>Ortho</m>(left, right, bottom, top, near, far)</code>
<bodytext>
 Multiply the current matrix with an orthographic matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glOrtho.xml">glOrtho</a></p>
<ul>
<li><m>left</m> Specify the coordinates for the left vertical clipping plane.</li>
<li><m>right</m> Specify the coordinates for the right vertical clipping plane.</li>
<li><m>bottom</m> Specify the coordinates for the bottom horizontal clipping plane.</li>
<li><m>top</m> Specify the coordinates for the top horizontal clipping plane.</li>
<li><m>near</m> Specify the distances to the nearer depth clipping plane.  This value is negative if the plane is to be behind the viewer.</li>
<li><m>far</m> Specify the distances to the farther depth clipping plane.  This value is negative if the plane is to be behind the viewer.</li>
</ul>
</bodytext>

<code><m>PassThrough</m>(token)</code>
<bodytext>
 Place a marker in the feedback buffer
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPassThrough.xml">glPassThrough</a></p>
<ul>
<li><m>token</m> Specifies a marker value to be placed in the feedback buffer  following a GL_PASS_THROUGH_TOKEN.</li>
</ul>
</bodytext>

<code><m>PixelStore</m>(pname, param)</code>
<bodytext>
 Set pixel storage modes
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPixelStore.xml">glPixelStore</a></p>
<ul>
<li><m>pname</m> Specifies the symbolic name of the parameter to be set. Six values affect  the packing of pixel data into memory: GL_PACK_SWAP_BYTES, GL_PACK_LSB_FIRST,  GL_PACK_ROW_LENGTH, GL_PACK_IMAGE_HEIGHT, GL_PACK_SKIP_PIXELS, GL_PACK_SKIP_ROWS,  GL_PACK_SKIP_IMAGES, and GL_PACK_ALIGNMENT. Six more affect the unpacking of  pixel data from memory: GL_UNPACK_SWAP_BYTES, GL_UNPACK_LSB_FIRST,  GL_UNPACK_ROW_LENGTH, GL_UNPACK_IMAGE_HEIGHT, GL_UNPACK_SKIP_PIXELS,  GL_UNPACK_SKIP_ROWS, GL_UNPACK_SKIP_IMAGES, and GL_UNPACK_ALIGNMENT.</li>
<li><m>param</m> Specifies the value that pname is set to.</li>
</ul>
</bodytext>

<code><m>PixelTransfer</m>(pname, param)</code>
<bodytext>
 Set pixel transfer modes
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPixelTransfer.xml">glPixelTransfer</a></p>
<ul>
<li><m>pname</m> Specifies the symbolic name of the pixel transfer parameter to be set. Must be  one of the following: GL_MAP_COLOR, GL_MAP_STENCIL, GL_INDEX_SHIFT,  GL_INDEX_OFFSET, GL_RED_SCALE, GL_RED_BIAS, GL_GREEN_SCALE, GL_GREEN_BIAS,  GL_BLUE_SCALE, GL_BLUE_BIAS, GL_ALPHA_SCALE, GL_ALPHA_BIAS, GL_DEPTH_SCALE,  or GL_DEPTH_BIAS.</li>
<li><m>param</m> Specifies the value that pname is set to.</li>
</ul>
</bodytext>

<code><m>PixelZoom</m>(xfactor, yfactor)</code>
<bodytext>
 Specify the pixel zoom factors
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPixelZoom.xml">glPixelZoom</a></p>
<ul>
<li><m>xfactor</m> Specify the x zoom factor for pixel write operations.</li>
<li><m>yfactor</m> Specify the y zoom factor for pixel write operations.</li>
</ul>
</bodytext>

<code><m>PointSize</m>(size)</code>
<bodytext>
 Specify the diameter of rasterized points
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPointSize.xml">glPointSize</a></p>
<ul>
<li><m>size</m> Specifies the diameter of rasterized points. The initial value is 1.</li>
</ul>
</bodytext>

<code><m>PolygonMode</m>(face, mode)</code>
<bodytext>
 Select a polygon rasterization mode
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPolygonMode.xml">glPolygonMode</a></p>
<ul>
<li><m>face</m> Specifies the polygons that mode applies to. Must be GL_FRONT for front-facing polygons,  GL_BACK for back-facing polygons, or GL_FRONT_AND_BACK for front- and back-facing polygons.</li>
<li><m>mode</m> Specifies how polygons will be rasterized. Accepted values are GL_POINT, GL_LINE, and GL_FILL.  The initial value is GL_FILL for both front- and back-facing polygons.</li>
</ul>
</bodytext>

<code><m>PolygonOffset</m>(factor, units)</code>
<bodytext>
 Set the scale and units used to calculate depth values
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPolygonOffset.xml">glPolygonOffset</a></p>
<ul>
<li><m>factor</m> Specifies a scale factor that is used to create a variable depth offset for each  polygon. The initial value is 0.</li>
<li><m>units</m> Is multiplied by an implementation-specific value to create a constant depth  offset. The initial value is 0.</li>
</ul>
</bodytext>

<code><m>PopAttrib</m>()</code>
<bodytext>
 Pop the server attribute stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushAttrib.xml">glPopAttrib</a></p>
<ul>
</ul>
</bodytext>

<code><m>PopClientAttrib</m>()</code>
<bodytext>
 Pop the client attribute stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushClientAttrib.xml">glPopClientAttrib</a></p>
<ul>
</ul>
</bodytext>

<code><m>PopMatrix</m>()</code>
<bodytext>
 Pop the current matrix stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushMatrix.xml">glPopMatrix</a></p>
<ul>
</ul>
</bodytext>

<code><m>PopName</m>()</code>
<bodytext>
 Pop the name stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushName.xml">glPopName</a></p>
<ul>
</ul>
</bodytext>

<code><m>PushAttrib</m>(mask)</code>
<bodytext>
 Push the server attribute stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushAttrib.xml">glPushAttrib</a></p>
<ul>
<li><m>mask</m> Specifies a mask that indicates which attributes to save.</li>
</ul>
</bodytext>

<code><m>PushClientAttrib</m>()</code>
<bodytext>
 Push the client attribute stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushClientAttrib.xml">glPushClientAttrib</a></p>
<ul>
</ul>
</bodytext>

<code><m>PushMatrix</m>()</code>
<bodytext>
 Push the current matrix stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushMatrix.xml">glPushMatrix</a></p>
<ul>
</ul>
</bodytext>

<code><m>PushName</m>(name)</code>
<bodytext>
 Push the name stack
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glPushName.xml">glPushName</a></p>
<ul>
<li><m>name</m> Specifies a name that will be pushed onto the name stack.</li>
</ul>
</bodytext>

<code><m>RasterPos</m>(..)</code>
<bodytext>
 Specify the raster position for pixel operations
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glRasterPos.xml">glRasterPos</a></p>
<ul>
<li><m>..</m> Specifies an array or list of values of two, three, or four elements,  specifying x, y, z, and w coordinates, respectively.</li>
</ul>
</bodytext>

<code><m>ReadBuffer</m>(mode)</code>
<bodytext>
 Select a color buffer source for pixels
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glReadBuffer.xml">glReadBuffer</a></p>
<ul>
<li><m>mode</m> Specifies a color buffer. Accepted values are GL_FRONT_LEFT, GL_FRONT_RIGHT,  GL_BACK_LEFT, GL_BACK_RIGHT, GL_FRONT, GL_BACK, GL_LEFT, GL_RIGHT, and  GL_AUXi, where i is between 0 and the value of GL_AUX_BUFFERS minus 1.</li>
</ul>
</bodytext>

<code><m>Rect</m>(...)</code>
<bodytext>
 Draw a rectangle
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glReadBuffer.xml">glRect</a></p>
<ul>
<li><m>...</m> Specify the vertices of a rectangle as an array or list of 4 values.</li>
</ul>
</bodytext>

<code><m>RenderMode</m>(mode)</code>
<bodytext>
 Set rasterization mode
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glRenderMode.xml">glRenderMode</a></p>
<ul>
<li><m>mode</m> Specifies the rasterization mode. Three values are accepted: GL_RENDER,  GL_SELECT, and GL_FEEDBACK. The initial value is GL_RENDER.</li>
</ul>
</bodytext>

<code><m>Rotate</m>(...)</code>
<bodytext>
 Multiply the current matrix by a rotation matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glRotate.xml">glRotate</a></p>
<ul>
<li><m>...</m> Specify an array or list of 4 values with the order being  the angle of rotation in degrees and then the the x, y, and z  coordinates of a vector, respectively</li>
</ul>
</bodytext>

<code><m>Scale</m>(...)</code>
<bodytext>
 Multiply the current matrix by a general scaling matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glScale.xml">glScale</a></p>
<ul>
<li><m>...</m> Specify an array or list of 3 values of scale factors along  the x, y, and z axes, respectively</li>
</ul>
</bodytext>

<code><m>Scissor</m>(x, y, width, height)</code>
<bodytext>
 Define the scissor box
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glScissor.xml">glScissor</a></p>
<ul>
<li><m>x</m> Specify the x-coordinate of the lower left corner of the scissor box.</li>
<li><m>y</m> Specify the y-coordinate of the lower left corner of the scissor box.</li>
<li><m>width</m> Specify the width of the scissor box.</li>
<li><m>height</m> Specify the height of the scissor box.</li>
</ul>
</bodytext>

<code><m>ShadeModel</m>(mode)</code>
<bodytext>
 Select flat or smooth shading
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glShadeModel.xml">glShadeModel</a></p>
<ul>
<li><m>mode</m> Specifies a symbolic value representing a shading technique. Accepted  values are GL_FLAT and GL_SMOOTH. The initial value is GL_SMOOTH.</li>
</ul>
</bodytext>

<code><m>StencilFunc</m>(func, ref, mask)</code>
<bodytext>
 Set front and back function and reference value for stencil testing
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glStencilFunc.xml">glStencilFunc</a></p>
<ul>
<li><m>func</m> Specifies the test function. Eight symbolic constants are valid: GL_NEVER,  GL_LESS, GL_LEQUAL, GL_GREATER, GL_GEQUAL, GL_EQUAL, GL_NOTEQUAL, and GL_ALWAYS.  The initial value is GL_ALWAYS.</li>
<li><m>ref</m> Specifies the reference value for the stencil test. ref is clamped to the range 0  2 n-1 , where n is the number of bitplanes in the stencil buffer. The initial value is 0.</li>
<li><m>mask</m> Specifies a mask that is ANDed with both the reference value and the stored stencil  value when the test is done. The initial value is all 1's.</li>
</ul>
</bodytext>

<code><m>StencilMask</m>(mask)</code>
<bodytext>
 Control the front and back writing of individual bits in the stencil planes
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glStencilMask.xml">glStencilMask</a></p>
<ul>
<li><m>mask</m> Specifies a bit mask to enable and disable writing of individual bits in the  stencil planes. Initially, the mask is all 1's.</li>
</ul>
</bodytext>

<code><m>StencilOp</m>(sfail, dpfail, dppass)</code>
<bodytext>
 Set front and back stencil test actions
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glStencilOp.xml">glStencilOp</a></p>
<ul>
<li><m>sfail</m> Specifies the action to take when the stencil test fails. Eight symbolic  constants are accepted: GL_KEEP, GL_ZERO, GL_REPLACE, GL_INCR, GL_INCR_WRAP,  GL_DECR, GL_DECR_WRAP, and GL_INVERT. The initial value is GL_KEEP.</li>
<li><m>dpfail</m> Specifies the stencil action when the stencil test passes, but the depth test  fails. dpfail accepts the same symbolic constants as sfail. The initial  value is GL_KEEP.</li>
<li><m>dppass</m> Specifies the stencil action when both the stencil test and the depth test pass,  or when the stencil test passes and either there is no depth buffer or depth  testing is not enabled. dppass accepts the same symbolic constants as sfail.  The initial value is GL_KEEP.</li>
</ul>
</bodytext>

<code><m>TexCoord</m>(..)</code>
<bodytext>
 Set the current texture coordinates
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glTexCoord.xml">glTexCoord</a></p>
<ul>
<li><m>..</m> Specifies an array or list of one, two, three, or four elements,  which in turn specify the s, t, r, and q texture coordinates.</li>
</ul>
</bodytext>

<code><m>TexEnv</m>(target, pname, param)</code>
<bodytext>
 Set texture environment parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glTexEnv.xml">glTexEnv</a></p>
<ul>
<li><m>target</m> Specifies a texture environment. May be GL_TEXTURE_ENV,  GL_TEXTURE_FILTER_CONTROL or GL_POINT_SPRITE.</li>
<li><m>pname</m> Specifies the symbolic name of a single-valued texture environment parameter.  May be either GL_TEXTURE_ENV_MODE, GL_TEXTURE_LOD_BIAS, GL_COMBINE_RGB,  GL_COMBINE_ALPHA, GL_SRC0_RGB, GL_SRC1_RGB, GL_SRC2_RGB, GL_SRC0_ALPHA,  GL_SRC1_ALPHA, GL_SRC2_ALPHA, GL_OPERAND0_RGB, GL_OPERAND1_RGB,  GL_OPERAND2_RGB, GL_OPERAND0_ALPHA, GL_OPERAND1_ALPHA, GL_OPERAND2_ALPHA,  GL_RGB_SCALE, GL_ALPHA_SCALE, or GL_COORD_REPLACE.</li>
<li><m>param</m> Specifies a single symbolic constant, one of GL_ADD, GL_ADD_SIGNED, GL_INTERPOLATE,  GL_MODULATE, GL_DECAL, GL_BLEND, GL_REPLACE, GL_SUBTRACT, GL_COMBINE, GL_TEXTURE,  GL_CONSTANT, GL_PRIMARY_COLOR, GL_PREVIOUS, GL_SRC_COLOR, GL_ONE_MINUS_SRC_COLOR,  GL_SRC_ALPHA, GL_ONE_MINUS_SRC_ALPHA, a single boolean value for the point sprite  texture coordinate replacement, a single floating-point value for the texture  level-of-detail bias, or 1.0, 2.0, or 4.0 when specifying the GL_RGB_SCALE or  GL_ALPHA_SCALE.</li>
</ul>
</bodytext>

<code><m>TexGen</m>(coord, pname, param)</code>
<bodytext>
 Control the generation of texture coordinates
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glTexGen.xml">glTexGen</a></p>
<ul>
<li><m>coord</m> Specifies a texture coordinate. Must be one of GL_S, GL_T, GL_R, or GL_Q.</li>
<li><m>pname</m> Specifies the symbolic name of the texture-coordinate generation function.  Must be GL_TEXTURE_GEN_MODE.</li>
<li><m>param</m> Specifies a single-valued texture generation parameter, one of GL_OBJECT_LINEAR,  GL_EYE_LINEAR, GL_SPHERE_MAP, GL_NORMAL_MAP, or GL_REFLECTION_MAP.</li>
</ul>
</bodytext>

<code><m>TexParameter</m>(target, pname, param)</code>
<bodytext>
 Set texture parameters
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glTexParameter.xml">glTexParameter</a></p>
<ul>
<li><m>target</m> Specifies the target texture, which must be either GL_TEXTURE_1D, GL_TEXTURE_2D,  GL_TEXTURE_3D, or GL_TEXTURE_CUBE_MAP.</li>
<li><m>pname</m> Specifies the symbolic name of a single-valued texture parameter. pname can be one  of the following: GL_TEXTURE_MIN_FILTER, GL_TEXTURE_MAG_FILTER, GL_TEXTURE_MIN_LOD,  GL_TEXTURE_MAX_LOD, GL_TEXTURE_BASE_LEVEL, GL_TEXTURE_MAX_LEVEL, GL_TEXTURE_WRAP_S,  GL_TEXTURE_WRAP_T, GL_TEXTURE_WRAP_R, GL_TEXTURE_PRIORITY, GL_TEXTURE_COMPARE_MODE,  GL_TEXTURE_COMPARE_FUNC, GL_DEPTH_TEXTURE_MODE, or GL_GENERATE_MIPMAP.</li>
<li><m>param</m> Specifies the value of pname.</li>
</ul>
</bodytext>

<code><m>Translate</m>(...)</code>
<bodytext>
 Multiply the current matrix by a translation matrix
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glTranslate.xml">glTranslate</a></p>
<ul>
<li><m>...</m> Specify an array or list of 3 values of translation vector</li>
</ul>
</bodytext>

<code><m>Vertex</m>(..)</code>
<bodytext>
 Specify a vertex
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glVertex.xml">glVertex</a></p>
<ul>
<li><m>..</m> Specifies an array or list of two, three, or four elements,  which in turn specify the x, y, z, and w vertex coordinates.</li>
</ul>
</bodytext>

<code><m>Viewport</m>(x, y, width, height)</code>
<bodytext>
 Set the viewport
<p>OpenGL Documentation: <a target="_blank" href="http://www.opengl.org/sdk/docs/man/xhtml/glViewport.xml">glViewport</a></p>
<ul>
<li><m>x</m> Specify the x-coordinate of the lower left corner of the viewport rectangle.</li>
<li><m>y</m> Specify the y-coordinate of the lower left corner of the viewport rectangle.</li>
<li><m>width</m> Specify the width of the viewport rectangle.</li>
<li><m>height</m> Specify the height of the viewport rectangle.</li>
</ul>
</bodytext>

<!--End OpenGL Bindings-->
</vignette>