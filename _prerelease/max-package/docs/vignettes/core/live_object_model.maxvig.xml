<?xml version='1.0' encoding='UTF-8'?> 
<?xml-stylesheet href="./_c74_vig.xsl" type="text/xsl"?> 
<vignette name='LOM - The Live Object Model'>
  <header1>LOM - The Live Object Model</header1>
  <bodytext><i>
     Objects which comprise the Live API described by their structure,
    properties and functions.</i></bodytext>
  <intro>
     The Live Object Model lists a number of Live object classes with their
    properties and functions, as well as their parent-child relations through
    which a hierarchy is formed. Please refer to the 
    <link name='live_api_overview' module='core' type='vignette'>Live API overview chapter</link>
     for definitions of the basic Live API terms and a list of the Max objects
    used to access it. 
    <br/>
    <br/>
    <i>This document refers to Ableton Live version 9.0</i>
  </intro>
  <header2>Object Model Overview</header2>
	<bodytext>
    <table>
      <tr>
        <th>
          <i>Click on the classes to navigate to their description.</i>
        </th>
      </tr>
    </table>
    <div class='imagebox'>
      <map name='LOMIndex' id='LOMIndex'>
        <area href='#Application' shape='rect' alt='' coords='100,88,215,128'/>
        <area href='#Application.View' shape='rect' alt='' coords='287,88,402,128'/>
        <area href='#Song' shape='rect' alt='' coords='100,205,215,245'/>
        <area href='#Song.View' shape='rect' alt='' coords='288,205,403,245'/>
        <area href='#Track.View' shape='rect' alt='' coords='411,315,525,354'/>
        <area href='#Track' shape='rect' alt='' coords='288,436,403,478'/>
        <area href='#Device' shape='rect' alt='' coords='532,420,672,458'/>
		<area href='#Device.View' shape='rect' alt='' coords='622,291,713,331'/>
        <area href='#DeviceParameter' shape='rect' alt='' coords='814,420,941,456'/>
        <area href='#Scene' shape='rect' alt='' coords='288,540,402,579'/>
        <area href='#CuePoint' shape='rect' alt='' coords='287,593,402,633'/>
        <area href='#MixerDevice' shape='rect' alt='' coords='532,476,672,516'/>
        <area href='#ClipSlot' shape='rect' alt='' coords='532,541,672,579'/>
        <area href='#Clip' shape='rect' alt='' coords='734,540,810,575'/>
		<area href='#Clip.View' shape='rect' alt='' coords='821,573,903,611'/>
        <area href='#ControlSurface' shape='rect' alt='' coords='99,658,250,700'/>
        <area href='#Chain' shape='rect' alt='' coords='727,198,813,237'/>
        <area href='#ChainMixerDevice' shape='rect' alt='' coords='813,255,941,294'/>
		<area href='#DrumPad' shape='rect' alt='' coords='768,367,844,406'/>
      </map>
      <img title='' src='images/ObjectModel.png' border='0' width='1087' height='936' alt='' usemap='#LOMIndex'> </img>
    </div>
  </bodytext>
  <div/>
  <liveapi_object name='Application'>
    <description>
       This class represents the Live application. It is reachable by the root
      path 
      <m>live_app</m>
       . 
    </description>
    <metadatalist/>
    <inletlist/>
    <outletlist/>
    <methodlist/>
    <attributelist/>
    <metadatalist/>
    <inletlist/>
    <outletlist/>
    <methodlist/>
    <attributelist/>
    <liveapi_path path='live_app'/>
    <liveapi_children>
      <liveapi_child name='view' gso='g--' type='Application.View'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
		<liveapi_property name='current_dialog_button_count' gso='g--' type='int'>
			<description>
				The number of buttons in the current message box.
			</description>
		</liveapi_property>
		<liveapi_property name='current_dialog_message' gso='g--' type='symbol'>
			<description>
				The text of the current message box (empty if no message box is currently shown).
			</description>
		</liveapi_property>
		<liveapi_property name='open_dialog_count' gso='g-o' type='int'>
			<description>
				The number of dialog boxes shown.
			</description>
		</liveapi_property>
	</liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='get_bugfix_version' type='int'>
        <description> Returns: the 2 in Live 9.1.2. </description>
      </liveapi_function>
      <liveapi_function name='get_document' type='Song'>
        <description> Returns: the current live set. </description>
      </liveapi_function>
      <liveapi_function name='get_major_version' type='int'>
        <description> Returns: the 9 in Live 9.1.2. </description>
      </liveapi_function>
      <liveapi_function name='get_minor_version' type='int'>
        <description> Returns: the 1 in Live 9.1.2. </description>
      </liveapi_function>
		<liveapi_function name='press_current_dialog_button'>
			<description>
				Parameter:
				<m>
					<i>index</i>
				</m>
				<br/>
				Press the button with the given index in the current dialog box.
			</description>
		</liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Application.View'>
    <description>
       This class represents the aspects of the Live application related to
      viewing the application. 
    </description>
    <liveapi_path path='live_app view'/>
    <liveapi_children> </liveapi_children>
    <liveapi_properties>
    		<liveapi_property name='browse_mode' gso='g-o' type='bool'>
			<description>
				True if HotSwap mode is active for any target.
			</description>
		</liveapi_property>
	</liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='available_main_views'>
        <description>
           Returns: 
          <m>
            <i>view names</i>
          </m>
           [list of symbols]. This is a constant list of view names to be used
          for the other functions: 
          <m>Browser Arranger Session Detail Detail/Clip Detail/DeviceChain</m>
           . 
        </description>
      </liveapi_function>
      <liveapi_function name='focus_view'>
        <description>
           Parameter: 
          <m>
            <i>view_name</i>
          </m>
          <br/>
           Shows named view and focuses on it 
        </description>
      </liveapi_function>
      <liveapi_function name='hide_view'>
        <description>
           Parameter: 
          <m>
            <i>view_name</i>
          </m>
        </description>
      </liveapi_function>
      <liveapi_function name='is_view_visible'>
        <description>
           Parameter: 
          <m>
            <i>view_name</i>
          </m>
          <br/>
           Returns: [bool] 
        </description>
      </liveapi_function>
      <liveapi_function name='scroll_view'>
        <description>
           Parameters: 
          <m>
            <i>direction view_name modifier_pressed</i>
          </m>
          <br/>
          <m>
            <i>direction</i>
          </m>
           [int] is 0 for up, 1 for down, 2 for left, 3 for right 
          <br/>
          <m>
            <i>modifier_pressed</i>
          </m>
           [bool] has no effect at the moment 
          <br/>
           Not all views are scrollable, and not in all directions. Currently, the 
		  <m>Browser</m>
		  ,
		  <m>Arranger</m>
		  , 
		  <m>Session</m>
		  , 
          <m>Detail/Clip</m>
           , and 
          <m>Detail/DeviceChain</m>
           views can be scrolled. 
          <br/>
           You can also pass an empty view_name 
          <m>""</m>
           , which refers to the arranger or the session (whichever view is
          visible). 
        </description>
      </liveapi_function>
      <liveapi_function name='show_view'>
        <description>
           Parameter: 
          <m>
            <i>view_name</i>
          </m>
        </description>
      </liveapi_function>
      <liveapi_function name='toggle_browse'>
        <description>
           Displays the device chain, the browser and starts hot swap for the
           selected device. Calling this function again stops hot swap. 
        </description>
      </liveapi_function>
      <liveapi_function name='zoom_view'>
        <description>
           Parameter: 
          <m>
            <i>direction view_name modifier_pressed</i>
          </m>
          <br/>
          <m>
            <i>direction</i>
          </m>
           [int] - 0 for up, 1 for down, 2 for left, 3 for right 
          <br/>
          <m>
            <i>modifier_pressed</i>
          </m>
           [bool] if 0 and view identifier results in arranger and 
          <m>direction</m>
           is up or down, then only the hight of the highlighted track is
          changed, otherwise the height of all tracks is changed 
          <br/>
           Not all views can be zoomed, only arranger and detail clip. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Song'>
    <description>
       This class represents a Live set. The current live set is reachable by
      the root path 
      <m>live_set</m>
       . 
    </description>
    <liveapi_path path='live_set'/>
    <liveapi_children>
      <liveapi_child name='appointed_device' gso='g-o' type='Device'>
        <description>
           The appointed device is the one used by a control surface unless the
           control surface itself chooses which device to use. It is marked by a blue hand. 
        </description>
      </liveapi_child>
      <liveapi_child name='cue_points' gso='g-o' type='list of CuePoint'>
        <description> Cue points are the markers in the arranger to which you can jump. </description>
      </liveapi_child>
      <liveapi_child name='master_track' gso='g--' type='Track'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='return_tracks' gso='g-o' type='list of Track'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='scenes' gso='g-o' type='list of Scene'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='tracks' gso='g-o' type='list of Track'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='view' gso='g--' type='Song.View'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='visible_tracks' gso='g-o' type='list of Track'>
        <description>
           A track is visible if it is not a subtrack folded in. Hiding tracks be
          scrolling them out of view is something completely else. 
        </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
       <liveapi_property name='arrangement_overdub' gso='gso' type='bool'>
        <description>
        	The state of the arrangement overdub button.
        </description>
      </liveapi_property>
     <liveapi_property name='back_to_arranger' gso='gso' type='bool'>
        <description>
           Indicates the current state of the back to arrangement button located
          in the Live application's transport bar (1 = highlighted). This button is
          used to indicate that the current state of the playback differs from
          what is stored in the arrangement. 
        </description>
      </liveapi_property>
      <liveapi_property name='can_jump_to_next_cue' gso='g-o' type='bool'>
        <description>
           The reason why it can't jump (0 = cannot jump) is that there is no cue
          point to the right of the current, or none at all. 
        </description>
      </liveapi_property>
      <liveapi_property name='can_jump_to_prev_cue' gso='g-o' type='bool'>
        <description>
           The reason why it can't jump (0 = cannot jump) is that there is no cue
          point to the left of the current, or none at all. 
        </description>
      </liveapi_property>
      <liveapi_property name='can_redo' gso='g--' type='bool'>
        <description> 1 = there is something in the history to redo. </description>
      </liveapi_property>
      <liveapi_property name='can_undo' gso='g--' type='bool'>
        <description> 1 = there is something in the history to undo. </description>
      </liveapi_property>
      <liveapi_property name='clip_trigger_quantization' gso='gso' type='int'>
        <description>
           Reflects the quantization setting in the transport bar. 
          <br/>
           0: None 
          <br/>
           1: 8 Bars 
          <br/>
           2: 4 Bars 
          <br/>
           3: 2 Bars 
          <br/>
           4: 1 Bar 
          <br/>
           5: 1/2 
          <br/>
           6: 1/2T 
          <br/>
           7: 1/4 
          <br/>
           8: 1/4T 
          <br/>
           9: 1/8 
          <br/>
           10: 1/8T 
          <br/>
           11: 1/16 
          <br/>
           12: 1/16T 
          <br/>
           13: 1/32 
        </description>
      </liveapi_property>
      <liveapi_property name='current_song_time' gso='gso' type='float'>
        <description> Live set play position in beats. </description>
      </liveapi_property>
      <liveapi_property name='exclusive_arm' gso='g--' type='bool'>
        <description>
           Current status (1 = set) of the exclusive arm option set in the record
          preferences. 
        </description>
      </liveapi_property>
      <liveapi_property name='exclusive_solo' gso='g--' type='bool'>
        <description>
           Current status (1 = set) of the exclusive solo option set in the record
          preferences. 
        </description>
      </liveapi_property>
      <liveapi_property name='groove_amount' gso='gso' type='float'>
        <description> The groove amount from the current set's groove pool (0. - 1.0). </description>
      </liveapi_property>
      <liveapi_property name='is_playing' gso='gso' type='bool'>
        <description>
           1 = the Live transport is running. Can be used to stop or start the
          Live transport. 
        </description>
      </liveapi_property>
      <liveapi_property name='last_event_time' gso='g--' type='float'>
        <description>
           The beat time of the last event (i.e. automation breakpoint, clip
          end, cue point, loop end) in the arranger. 
        </description>
      </liveapi_property>
      <liveapi_property name='loop' gso='gso' type='bool'>
        <description> 1 = arranger loop is active. </description>
      </liveapi_property>
      <liveapi_property name='loop_length' gso='gso' type='float'>
        <description> Arranger loop length in beats. </description>
      </liveapi_property>
      <liveapi_property name='loop_start' gso='gso' type='float'>
        <description> Arranger loop start in beats. </description>
      </liveapi_property>
      <liveapi_property name='metronome' gso='gso' type='bool'>
        <description> 1 = the metronome switch in the transport bar is turned on. </description>
      </liveapi_property>
      <liveapi_property name='midi_recording_quantization' gso='gso' type='int'>
        <description>
           Reflects the current selection of the Edit->Record Quantization menu.
          <br/>
           0: None 
          <br/>
           1: 1/4 
          <br/>
           2: 1/8 
          <br/>
           3: 1/8T 
          <br/>
           4: 1/8 + 1/8T 
          <br/>
           5: 1/16 
          <br/>
           6: 1/16T 
          <br/>
           7: 1/16 + 1/16T 
          <br/>
           8:1/32 
        </description>
      </liveapi_property>
      <liveapi_property name='nudge_down' gso='gso' type='bool'>
        <description> The status (1 = pressed) of the nudge down button in the transport bar. </description>
      </liveapi_property>
      <liveapi_property name='nudge_up' gso='gso' type='bool'>
        <description> The status (1 = pressed) of the nudge up button in the transport bar. </description>
      </liveapi_property>
      <liveapi_property name='overdub' gso='gso' type='bool'>
        <description> 1 = overdub flag in transport bar is highlighted. </description>
      </liveapi_property>
      <liveapi_property name='punch_in' gso='gso' type='bool'>
        <description> 1 = the punch in switch in transport is highlighted. </description>
      </liveapi_property>
      <liveapi_property name='punch_out' gso='gso' type='bool'>
        <description> 1 = the punch out switch in transport is highlighted. </description>
      </liveapi_property>
      <liveapi_property name='re_enable_automation_enabled' gso='g-o' type='bool'>
        <description> The state of the 'Back to Session Automation' button. </description>
      </liveapi_property>
      <liveapi_property name='record_mode' gso='gso' type='bool'>
        <description> 1 = global record is enabled (record switch in transport is red). </description>
      </liveapi_property>
      <liveapi_property name='select_on_launch' gso='g--' type='bool'>
        <description>
           Current status (1 = set) of the respective option set in the launch
          preferences. 
        </description>
      </liveapi_property>
      <liveapi_property name='session_automation_record' gso='gso' type='bool'>
        <description>
        	The state of the Automation Arm button in Live.
        </description>
      </liveapi_property>
      <liveapi_property name='session_record' gso='gso' type='bool'>
        <description>
        	The state of the session overdub button.
        </description>
      </liveapi_property>
       <liveapi_property name='session_record_status' gso='g-o' type='int'>
        <description>
        	Reflects the state of Live's session recording button. 
        </description>
      </liveapi_property>
     <liveapi_property name='signature_denominator' gso='gso' type='int'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='signature_numerator' gso='gso' type='int'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='song_length' gso='g-o' type='float'>
        <description>
           A little more than 
          <m>last_event_time</m>
           , in beats. 
        </description>
      </liveapi_property>
      <liveapi_property name='swing_amount' gso='gso' type='float'>
        <description>
        	Range: 0.0 - 1.0; Affects midi recording quantization and all direct calls to <m>Clip.quantize</m>. 
        </description>
      </liveapi_property>
      <liveapi_property name='tempo' gso='gso' type='float'>
        <description>
           Current tempo of the Live set in bpm, 20.0 ... 999.0. The tempo may
          be automated, so it can change depending on the current song time. 
        </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='capture_and_insert_scene'>
        <description></description>
      </liveapi_function>
      <liveapi_function name='continue_playing'>
        <description> From the current playback position. </description>
      </liveapi_function>
      <liveapi_function name='create_audio_track'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
          Index determines where the track is added, it is only valid between 0 and 
          len(song.tracks). Using an index of -1 will add the new track at the end of the list.
          </description>
      </liveapi_function>
       <liveapi_function name='create_midi_track'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
          Index determines where the track is added, it is only valid between 0 and 
          len(song.tracks). Using an index of -1 will add the new track at the end of the list.
          </description>
      </liveapi_function>
       <liveapi_function name='create_return_track'>
        <description>
          Adds a new Return track at the end.
          </description>
      </liveapi_function>
     <liveapi_function name='create_scene'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
          Returns: The new scene
          <br/>
          Index determines where the scene is added. It is only valid between 0 and 
          len(song.scenes). Using an index of -1 will add the new scene at the end of the list.
          </description>
      </liveapi_function>
       <liveapi_function name='delete_scene'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
           Delete the scene at the given index.
          </description>
      </liveapi_function>      
       <liveapi_function name='delete_track'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
           Delete the track at the given index.
          </description>
      </liveapi_function>      
      <liveapi_function name='duplicate_scene'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
          Index determines which scene to duplicate.
          </description>
      </liveapi_function>
       <liveapi_function name='duplicate_track'>
        <description>
          Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
          Index determines which track to duplicate.
          </description>
      </liveapi_function>
     <liveapi_function name='get_beats_loop_length'>
        <description>
           Returns: 
          <m>
            <i>bars.beats.sixteenths.ticks</i>
          </m>
           [symbol] 
          <br/>
           The arranger loop length. 
        </description>
      </liveapi_function>
      <liveapi_function name='get_beats_loop_start'>
        <description>
           Returns: 
          <m>
            <i>bars.beats.sixteenths.ticks</i>
          </m>
           [symbol] 
          <br/>
           The arranger loop start. 
        </description>
      </liveapi_function>
      <liveapi_function name='get_current_beats_song_time'>
        <description>
           Returns: 
          <m>
            <i>bars.beats.sixteenths.ticks</i>
          </m>
           [symbol] 
          <br/>
           The current arranger playback position. 
        </description>
      </liveapi_function>
      <liveapi_function name='get_current_smpte_song_time'>
        <description>
           Parameter: 
          <m>
            <i>format</i>
          </m>
          <br/>
          <m>
            <i>format</i>
          </m>
           [int] is the time code type to be returned 
          <br/>
           0: the frames position shows the milliseconds 
          <br/>
           1: Smpte24 
          <br/>
           2: Smpte25 
          <br/>
           3: Smpte30 
          <br/>
           4: Smpte30Drop 
          <br/>
           5: Smpte29 
          <br/>
           Returns: 
          <i>hours:min:sec:frames</i>
           [symbol] 
          <br/>
           The current arranger playback position. 
        </description>
      </liveapi_function>
      <liveapi_function name='is_cue_point_selected'>
        <description> Returns: bool 1 = the current arranger playback position is at a cue point </description>
      </liveapi_function>
      <liveapi_function name='jump_by'>
        <description>
           Parameter: 
          <m>
            <i>beats</i>
          </m>
          <br/>
          <m>
            <i>beats</i>
          </m>
           [double] is the amount to jump relatively to the current position 
        </description>
      </liveapi_function>
      <liveapi_function name='jump_to_next_cue'>
        <description> Jump to the right, if possible. </description>
      </liveapi_function>
      <liveapi_function name='jump_to_prev_cue'>
        <description> Jump to the left, if possible. </description>
      </liveapi_function>
      <liveapi_function name='play_selection'>
        <description> Do nothing if no selection is set in arranger. </description>
      </liveapi_function>
      <liveapi_function name='re_enable_automation'>
        <description>
        Trigger 'Back to Session Automation', re-activating automation in all running session clips.
        </description>
      </liveapi_function>
      <liveapi_function name='redo'>
        <description> Causes the Live application to redo the last operation. </description>
      </liveapi_function>
      <liveapi_function name='scrub_by'>
        <description>
           Parameter: 
          <m>
            <i>beats</i>
          </m>
          <br/>
          <m>
            <i>beats</i>
          </m>
           [double] the amount to scrub relative to the current arranger
          playback position 
          <br/>
           Same as 
          <m>jump_by</m>
           , at the moment. 
        </description>
      </liveapi_function>
      <liveapi_function name='set_or_delete_cue'>
        <description> Toggle cue point at current arranger playback position. </description>
      </liveapi_function>
      <liveapi_function name='start_playing'>
        <description> </description>
      </liveapi_function>
      <liveapi_function name='stop_all_clips'>
        <description>
          Parameter (optional): 
          <m>
            <i>quantized</i>
          </m>
          <br/>
          Calling the function with 0 will stop all clips immediately, independent of 
          the launch quantization. The default is '1'.
        </description>
      </liveapi_function>
      <liveapi_function name='stop_playing'>
        <description> </description>
      </liveapi_function>
      <liveapi_function name='tap_tempo'>
        <description>
           Same as tapping the tempo field in the transport bar. The new tempo
          is calculated based on the time between subsequent calls of this
          function. 
        </description>
      </liveapi_function>
      <liveapi_function name='trigger_session_record'>
        <description>
          Parameter: 
          <m>
            <i>record_length (optional)</i>
          </m>
          <br/>
          Starts recording in either the selected slot or the next empty slot, if the track 
          is armed. If <i>record_length</i> is provided, the slot will record for the 
          given length in beats.
          <br/>
          If triggered while recording, recording will stop and clip playback will start.
        </description>
      </liveapi_function>
      <liveapi_function name='undo'>
        <description> Causes the Live application to undo the last operation. </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Song.View'>
    <description>
       This class represents the view aspects of a Live document: the session
      and arranger views. 
    </description>
    <liveapi_path path='live_set view'/>
    <liveapi_children>
      <liveapi_child name='detail_clip' gso='gso' type='Clip'>
        <description> The clip currently displayed in the Live applications detail view. </description>
      </liveapi_child>
      <liveapi_child name='highlighted_clip_slot' gso='gs-' type='ClipSlot'>
        <description> The slot highlighted in the session view. </description>
      </liveapi_child>
      <liveapi_child name='selected_parameter' gso='g-o' type='DeviceParameter'>
        <description> The selected parameter, or "id 0" </description>
      </liveapi_child>
      <liveapi_child name='selected_scene' gso='gso' type='Scene'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='selected_track' gso='gso' type='Track'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='draw_mode' gso='gso' type='bool'>
        <description>
           Reflects the state of the envelope/automation draw mode switch in
          transport bar, as toggled with Cmd/Ctrl-B. 
          <br/>
           0 = breakpoint editing (shows arrow), 1 = drawing (shows pencil) 
        </description>
      </liveapi_property>
      <liveapi_property name='follow_song' gso='gso' type='bool'>
        <description>
           Reflects the state of the follow switch in transport bar as toggled
          with Cmd/Ctrl-F. 
          <br/>
           0 = don't follow playback position, 1 = follow playback position 
        </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='select_device'>
        <description>
           Parameter: 
          <m>
            <i>id NN</i>
          </m>
          <br/>
           Selects the given device object in its track. 
          <br/>
           You may obtain the id using a 
          <o>live.path</o>
           or by using 
          <m>get devices</m>
           on a track, for example. 
          <br/>
           The track containing the device will not be shown automatically, and
          the device gets the appointed device (blue hand) only if its track is
          selected. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Track'>
    <description>
       This class represents a track in Live. It can be either an audio track, a
      MIDI track, a return track or the master track. The master track and at
      least one Audio or MIDI track will be always present. Return tracks are
      optional. 
      <br/>
      <br/>
       Not all properties are supported by all types of tracks. The properties
      are marked accordingly. 
    </description>
    <liveapi_path path='live_set tracks N'/>
    <liveapi_children>
      <liveapi_child name='clip_slots' gso='g-o' type='list of ClipSlot'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='devices' gso='g-o' type='list of Device'>
        <description> Includes mixer device. </description>
      </liveapi_child>
      <liveapi_child name='mixer_device' gso='g--' type='MixerDevice'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='view' gso='g--' type='Track.View'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='arm' gso='gso' type='bool'>
        <description> 1 = track is armed for recording. [not in return/master tracks] </description>
      </liveapi_property>
      <liveapi_property name='can_be_armed' gso='g--' type='bool'>
        <description> Is 0 for return and master tracks. </description>
      </liveapi_property>
      <liveapi_property name='color' gso='gso' type='int'>
        <description>
           The RGB value of the track's color in the form 
          <m>0x00rrggbb</m>
           or (2^16 * red) + (2^8) * green + blue, where red, green and blue are
          values from 0 (dark) to 255 (light). 
          <br/>
          <br/>
           When setting the RGB value, the nearest color from the Track color
          chooser is taken. 
        </description>
      </liveapi_property>
      <liveapi_property name='current_input_routing' gso='gso' type='symbol'>
        <description> As all other routings, reflects the string shown in the routing selector. </description>
      </liveapi_property>
      <liveapi_property name='current_input_sub_routing' gso='gso' type='symbol'>
        <description> Doesn't send any output if the selector has no entries. </description>
      </liveapi_property>
      <liveapi_property name='current_monitoring_state' gso='gso' type='int'>
        <description> 0 = In 1=Auto 2=Off [not in return/master tracks] </description>
      </liveapi_property>
      <liveapi_property name='current_output_routing' gso='gso' type='symbol'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='current_output_sub_routing' gso='gso' type='symbol'>
        <description> Doesn't send any output if the selector has no entries. </description>
      </liveapi_property>
      <liveapi_property name='fired_slot_index' gso='g-o' type='int'>
        <description>
           Reflects the blinking clip slot. 
          <br/>
           -1 = no slot fired, -2 = track stop button fired 
          <br/>
           First clip slot has index 0. 
          <br/>
           [not in return/master tracks] 
        </description>
      </liveapi_property>
      <liveapi_property name='fold_state' gso='gs-' type='int'>
        <description>
           0 = subtracks are visible 1=track is folded and subtracks hidden 
          <br/>
           [only available if 
          <m>is_foldable</m>
           is 1] 
        </description>
      </liveapi_property>
      <liveapi_property name='has_audio_input' gso='g--' type='bool'>
        <description> 1 for audio tracks. </description>
      </liveapi_property>
      <liveapi_property name='has_audio_output' gso='g--' type='bool'>
        <description> 1 for audio tracks and MIDI tracks with instrument. </description>
      </liveapi_property>
      <liveapi_property name='has_midi_input' gso='g--' type='bool'>
        <description> 1 for MIDI tracks. </description>
      </liveapi_property>
      <liveapi_property name='has_midi_output' gso='g--' type='bool'>
        <description> 1 for MIDI tracks with no instruments and no audio effects. </description>
      </liveapi_property>
      <liveapi_property name='implicit_arm' gso='gso' type='bool'>
        <description>A second arm state, only used by Push so far.</description>
      </liveapi_property>
      <liveapi_property name='input_meter_left' gso='g-o' type='float'>
        <description>
           Smoothed momentary peak value of left channel input meter, 0.0 to
          1.0. For tracks with audio output only. This value corresponds to the
          meters shown in Live. Please take into account that the left/right
          audio meters put a significant load onto the GUI part of Live. 
        </description>
      </liveapi_property>
      <liveapi_property name='input_meter_level' gso='g-o' type='float'>
        <description>
           Hold peak value of input meters of audio and MIDI tracks, 0.0 ...
          1.0. For audio tracks it is the maximum of the left and right
          channels. The hold time is 1 second. 
        </description>
      </liveapi_property>
      <liveapi_property name='input_meter_right' gso='g-o' type='float'>
        <description>
           Smoothed momentary peak value of right channel input meter, 0.0 to
          1.0. For tracks with audio output only. This value corresponds to the
          meters shown in Live. 
        </description>
      </liveapi_property>
      <liveapi_property name='input_routings' gso='g--' type='list of symbols'>
        <description> Available input routings. [not in master track] </description>
      </liveapi_property>
      <liveapi_property name='input_sub_routings' gso='g--' type='list of symbols'>
        <description>
           Available sub routings for the currently selected input routing.
           If no entries are available, nothing is output. [not in master track]
        </description>
      </liveapi_property>
      <liveapi_property name='is_foldable' gso='g--' type='bool'>
        <description>
           1 if track can be (un)folded to hide resp. reveal the contained
          tracks. This is currently the case for group tracks. Instrument and
          drum racks return 0 although they can be openend/closed. This will be
          fixed in a later release. 
        </description>
      </liveapi_property>
      <liveapi_property name='is_part_of_selection' gso='g--' type='bool'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='is_visible' gso='g--' type='bool'>
        <description> 0 = track is hidden in a folded group track. </description>
      </liveapi_property>
      <liveapi_property name='mute' gso='gso' type='bool'>
        <description> [not in master track] </description>
      </liveapi_property>
      <liveapi_property name='name' gso='gso' type='symbol'>
        <description> As shown in track header. </description>
      </liveapi_property>
      <liveapi_property name='output_meter_left' gso='g-o' type='float'>
        <description>
           Smoothed momentary peak value of left channel output meter, 0.0 to
          1.0. For tracks with audio output only. This value corresponds to the
          meters shown in Live. Please take into account that the left/right
          audio meters add a significant load to Live GUI resource usage. 
        </description>
      </liveapi_property>
      <liveapi_property name='output_meter_level' gso='g-o' type='float'>
        <description>
           Hold peak value of output meters of audio and MIDI tracks, 0.0 to
          1.0. For audio tracks, it is the maximum of the left and right
          channels. The hold time is 1 second. 
        </description>
      </liveapi_property>
      <liveapi_property name='output_meter_right' gso='g-o' type='float'>
        <description>
           Smoothed momentary peak value of right channel output meter, 0.0 to
          1.0. For tracks with audio output only. This value corresponds to the
          meters shown in Live. 
        </description>
      </liveapi_property>
      <liveapi_property name='output_routings' gso='g--' type='list of symbols'>
        <description> Available output routings. [not in master track] </description>
      </liveapi_property>
      <liveapi_property name='output_sub_routings' gso='g--' type='list of symbols'>
        <description>
           Available sub routings for the currently selected output routing.
          If no entries are available, nothing is output.. [not in master
          track] 
        </description>
      </liveapi_property>
      <liveapi_property name='playing_slot_index' gso='g-o' type='int'>
        <description> First slot has index 0, -2 = track stop slot fired in session view, -1 = arranger recording with no session clip playing. [not in return/master tracks] </description>
      </liveapi_property>
      <liveapi_property name='solo' gso='gso' type='bool'>
        <description>
           Remark: when setting this property, the exclusive solo logic is
          bypassed, so you have to unsolo the other tracks yourself. [not in
          master track] 
        </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='delete_device'>
        <description>
           Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
			Delete the device at the given index. 
        </description>
      </liveapi_function>
      <liveapi_function name='duplicate_clip_slot'>
        <description>
           Parameter: 
          <m>
            <i>index</i>
          </m>
          <br/>
			Works like 'Duplicate' in a clip's context menu. 
        </description>
      </liveapi_function>
      <liveapi_function name='jump_in_running_session_clip'>
        <description>
           Parameter: 
          <m>
            <i>beats</i>
          </m>
          <br/>
          <m>
            <i>beats</i>
          </m>
           [double] is the amount to jump relatively to the current clip
          position. 
          <br/>
           Modify playback position in running session clip, if any. 
        </description>
      </liveapi_function>
      <liveapi_function name='stop_all_clips'>
        <description> Stops all playing and fired clips in this track. </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Track.View'>
    <description> Representing the view aspects of a Track. </description>
    <liveapi_path path='live_set tracks N view'/>
    <liveapi_children>
      <liveapi_child name='selected_device' gso='g-o' type='Device'>
        <description>
           The selected device or the first selected device (in case of multi/group selection). 
        </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='device_insert_mode' gso='gso' type='int'>
        <description>  
        Determines where a device will be inserted when loaded from the 
        browser. 0 = add device at the end, 1 = add device 
        to the left of the selected device, 2 = add device to the right 
        of the selected device. </description>
      </liveapi_property>
      <liveapi_property name='is_collapsed' gso='gso' type='bool'>
        <description> In arranger view: 1=track collapsed, 0=track opened. </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='select_instrument'>
        <description>
           Returns: bool 0 = there are no devices to select 
          <br/>
           Selects track instrument or first device, makes it visible and
          focuses on it. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='ClipSlot'>
    <description>
       This class represents an entry in Lives Session view matrix. 
      <br/>
      <br/>
       The properties 
      <m>playing_status</m>
       , 
      <m>is_playing</m>
       and 
      <m>is_recording</m>
       are useful for clip slots of group tracks. These are always empty and
      represent the state of the clips in their subtracks. 
    </description>
    <liveapi_path path='live_set tracks N clip_slots M'/>
    <liveapi_children>
      <liveapi_child name='clip' gso='g--' type='Clip'>
        <description>
          <m>id 0</m>
           if slot is empty 
        </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='controls_other_clips' gso='g-o' type='bool'>
        <description>
           1 for a group track slot that has non-deactivated clips in
          substracks. 
          <br/>
           Control of empty clip slots doesn't count. 
        </description>
      </liveapi_property>
      <liveapi_property name='has_clip' gso='g-o' type='bool'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='has_stop_button' gso='gso' type='bool'>
        <description> If 1, this clip stops its track (or subtracks). </description>
      </liveapi_property>
      <liveapi_property name='is_playing' gso='g--' type='bool'>
        <description>
           1 if playing_status != 0, otherwise 0. 
        </description>
      </liveapi_property>
      <liveapi_property name='is_recording' gso='g--' type='bool'>
        <description>
           1 if playing_status == 2, otherwise 0. 
        </description>
      </liveapi_property>
      <liveapi_property name='is_triggered' gso='g-o' type='bool'>
        <description>
           1 = clip slot button (start, stop or record) or button of contained
          clip are blinking. 
        </description>
      </liveapi_property>
      <liveapi_property name='playing_status' gso='g-o' type='int'>
        <description>
           0 = all clips in subtracks stopped or all empty subtracks. 
          <br/>
           1 = at least one clip in subtracks playing. 
          <br/>
           2 = at least one clip in subtracks playing or recording. 
          <br/>
           Equals 0 if this is not a clip slot of a group track. 
        </description>
      </liveapi_property>
      <liveapi_property name='will_record_on_start' gso='g--' type='bool'>
        <description> 1 = clip slot will record on start. </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='create_clip'>
        <description>
          Parameter: 
          <m>
            <i>length</i>
          </m>
          <br/>
		  Length is given in beats and must be a greater value than 0.0. Can only be called on empty
		  clip slots in MIDI tracks.
        </description>
      </liveapi_function>
      <liveapi_function name='delete_clip'>
        <description>
		  Deletes the contained clip.
        </description>
      </liveapi_function>
      <liveapi_function name='fire'>
        <description>
          Parameter: 
          <m>
            <i>record_length (optional)</i>
          </m>
          <br/>
          <m>
            <i>launch_quantization (optional)</i>
          </m>
          <br/>
          Fires the clip or triggers the stop button, if any. Starts recording
          if slot is empty and track is armed. Starts recording of armed and
          empty subtracks if Preferences->Launch->Start Recording on Scene
          Launch is ON. If <i>record_length</i> is provided, the slot will record for the 
          given length in beats. <i>launch_quantization</i> overrides the global quantization 
          if provided.
        </description>
      </liveapi_function>
      <liveapi_function name='set_fire_button_state'>
        <description>
           Parameter: 
          <m>
            <i>state</i>
          </m>
          <br/>
          <m>
            <i>state</i>
          </m>
           [bool] 
          <br/>
           If the state is set to 1, Live simulates pressing of slot start
          button until the state is set to 0 or until the slot is stopped
          otherwise. 
        </description>
      </liveapi_function>
      <liveapi_function name='stop'>
        <description>
           Stops playing or recording clips in this track or its subtracks, if
          any. It doesn't matter on which slot of the track you call this
          function. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Clip'>
    <description>
       This class represents a clip in Live. It can be either an audio clip or a
      MIDI clip in an arrangement or the session depending on the track (slot)
      it lives in. 
    </description>
    <liveapi_path path='live_set tracks N clip_slots M clip'/>
    <liveapi_children>
      <liveapi_child name='view' gso='g--' type='Clip.View'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='available_warp_modes' gso='g--' type='list'>
        <description>
        Returns the list of indexes of the warp modes available for the clip. Only 
        valid for audio clips.
        </description>
      </liveapi_property>
      <liveapi_property name='color' gso='gso' type='int'>
        <description>
           The RGB value of the clip's color in the form 
          <m>0x00rrggbb</m>
           or (2^16 * red) + (2^8) * green + blue, where red, green and blue are
          values from 0 (dark) to 255 (light). 
          <br/>
          <br/>
           When setting the RGB value, the nearest color from the Clip color
          chooser is taken. 
        </description>
      </liveapi_property>
      <liveapi_property name='end_marker' gso='gso' type='double'>
        <description>
        The end marker of the clip in beats, independent of the loop state. Cannot be set 
        before the start marker.
        </description>
      </liveapi_property>
      <liveapi_property name='gain' gso='gso' type='double'>
        <description>
        The gain of the clip, range is 0.0 to 1.0, only valid or audio clips.
        </description>
      </liveapi_property>
      <liveapi_property name='gain_display_string' gso='g--' type='symbol'>
        <description>
        Get the gain display value of the clip as a string (e.g. "1.3 dB"). Can only be 
        called on audio clips.
        </description>
      </liveapi_property>
      <liveapi_property name='file_path' gso='g--' type='symbol'>
        <description>
        Get the location of the audio file represented by the clip. Only 
        available for audio clips.
        </description>
      </liveapi_property>
      <liveapi_property name='has_envelopes' gso='g-o' type='bool'>
        <description> Get/observe whether the clip has any automation. </description>
      </liveapi_property>
      <liveapi_property name='is_audio_clip' gso='g--' type='bool'>
        <description> 0 = MIDI clip, 1 = audio clip </description>
      </liveapi_property>
      <liveapi_property name='is_midi_clip' gso='g--' type='bool'>
        <description>
           The opposite of 
          <m>is_audio_clip</m>
           . 
        </description>
      </liveapi_property>
      <liveapi_property name='is_overdubbing' gso='g-o' type='bool'>
        <description> 1 if clip is overdubbing. </description>
      </liveapi_property>
      <liveapi_property name='is_playing' gso='gs-' type='bool'>
        <description> 1 if clip is playing or recording. </description>
      </liveapi_property>
      <liveapi_property name='is_recording' gso='g-o' type='bool'>
        <description> 1 if clip is recording. </description>
      </liveapi_property>
      <liveapi_property name='is_triggered' gso='g--' type='bool'>
        <description> 1 if play button is blinking. </description>
      </liveapi_property>
      <liveapi_property name='playing_status' gso='--o' type='bang'>
        <description> Observer sends bang when playing/trigger status changes. </description>
      </liveapi_property>
      <liveapi_property name='length' gso='g--' type='double'>
        <description>
           For looped clips: loop length in beats. Otherwise its the distance in
          beats from start to stop marker. Makes no sense for unwarped audio
          clips. 
        </description>
      </liveapi_property>
      <liveapi_property name='loop_end' gso='gso' type='double'>
        <description>
           For looped clips: loop end. 
          <br/>
           For unlooped clips: clip end. 
        </description>
      </liveapi_property>
      <liveapi_property name='loop_jump' gso='--o' type='bang'>
        <description>
           Bangs when the clip play position is crossing the loop start marker
          (possibly projected into the loop). 
        </description>
      </liveapi_property>
      <liveapi_property name='loop_start' gso='gso' type='double'>
        <description>
           For looped clips: loop start. 
          <br/>
           For unlooped clips: clip start. 
          <br/>
          <br/>
           loop_start and loop_end are in absolute clip beat time of clip is
          MIDI or warped. The 1.1.1 position has beat time 0. If the clip is
          unwarped audio, they are given in seconds, 0 is the time of the first
          sample in the audio material. 
        </description>
      </liveapi_property>
      <liveapi_property name='looping' gso='gso' type='bool'>
        <description> 1 if clip is looped. Unwarped audio cannot be looped. </description>
      </liveapi_property>
      <liveapi_property name='muted' gso='gso' type='bool'>
        <description> 1 if muted (i.e. power button of the clip is off). </description>
      </liveapi_property>
      <liveapi_property name='name' gso='gso' type='symbol'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='pitch_coarse' gso='gso' type='int'>
        <description>
           Pitch shift in semitones ("Transpose"), -48 ... 48. 
          <br/>
           Available for audio clips only. 
        </description>
      </liveapi_property>
      <liveapi_property name='pitch_fine' gso='gso' type='float'>
        <description>
           Extra pitch shift in cents ("Detune"), -50 ... 49. 
          <br/>
           Available for audio clips only. 
        </description>
      </liveapi_property>
      <liveapi_property name='playing_position' gso='g-o' type='float'>
        <description>
           Current playing position of the clip. 
          <br/>
          <br/>
           For MIDI and warped audio clips, the value is given in beats of
          absolute clip time. Zero beat time of the clip is where 1 is shown in
          the bar/beat/16th time scale at the top of the clip view. 
          <br/>
          <br/>
           For unwarped audio clips, the position is given in seconds, according
          to the time scale shown at the bottom of the clip view. 
          <br/>
          <br/>
           Stopped clips have a playing position of 0. 
        </description>
      </liveapi_property>
      <liveapi_property name='notes' gso='--o' type='bang'>
        <description>
           Observer sends bang when notelist changes. 
          <br/>
           Available for MIDI clips only. 
        </description>
      </liveapi_property>
      <liveapi_property name='signature_denominator' gso='gso' type='int'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='signature_numerator' gso='gso' type='int'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='start_marker' gso='gso' type='double'>
        <description>
        The start marker of the clip in beats, independent of the loop state. Cannot be set 
        behind the end marker.
        </description>
      </liveapi_property>
		<liveapi_property name='start_time' gso='g--' type='double'>
			<description>
				The time the clip has been started, relative to the global song time. The value is in beats.
			</description>
		</liveapi_property>
		<liveapi_property name='warping' gso='gso' type='bool'>
        <description>
           1 if warp switch is on. 
          <br/>
           Available for audio clips only. 
        </description>
      </liveapi_property>
      <liveapi_property name='warp_mode' gso='gso' type='int'>
        <description>
          The warp mode of the clip as an integer index. Available warp modes are 
          <br/>
          0 = Beats
          <br/>
          1 = Tones  
          <br/>
          2 = Texture 
          <br/>
          3 = Repitch 
          <br/>
          4 = Complex  
          <br/>
          5 = Rex  
          <br/>
          6 = ComplexPro 
          <br/>
          <br/>
           Available for audio clips only. 
        </description>
      </liveapi_property>
      <liveapi_property name='will_record_on_start' gso='g--' type='bool'>
        <description>
           1 for MIDI clips which are in triggered state, with the track armed
          and overdub on. 
        </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='clear_all_envelopes'>
        <description>
        Removes all automation in the clip.
        </description>
      </liveapi_function>
      <liveapi_function name='clear_envelope'>
        <description>
          Parameter:
          <br/>
          <m><i>device_parameter</i></m> [id]          
          <br/>
        Removes the automation of the clip for the given parameter.
        </description>
      </liveapi_function>
      <liveapi_function name='deselect_all_notes'>
        <description>
           Call this before replace_selected_notes if you just want to add some
          notes. 
          <br/>
           Output: 
          <br/>
          <m>deselect_all_notes id 0</m>
          <br/>
          <br/>
           For MIDI clips only. 
        </description>
      </liveapi_function>
      <liveapi_function name='duplicate_loop'>
        <description>
        Makes the loop two times longer by moving loop_end to the right, and duplicates 
        both the notes and the envelopes. If the clip is not looped, the clip start/end 
        range is duplicated. Available for MIDI clips only.
        </description>
      </liveapi_function>
      <liveapi_function name='fire'>
        <description> Same effect as pressing the start button of the clip. </description>
      </liveapi_function>
      <liveapi_function name='get_notes'>
        <description>
          Parameter:
          <br/>
          <m><i>from_time</i></m> [double]          
          <br/>
          <m><i>from_pitch</i></m> [double]
          <br/>
          <m><i>time_span</i></m> [double]
          <br/>
          <m><i>pitch_span</i></m> [double]
          <br/>
          Returns a list of notes that start in the given area. The output is 
          similar to <i>get_selected_notes</i>.
          </description>
      </liveapi_function>
      <liveapi_function name='get_selected_notes'>
        <description>
           Use this if you want to operate on the selected notes. 
          <br/>
           Output: 
          <br/>
          <m>
             get_selected_notes notes 
            <i>count</i>
          </m>
          <br/>
          <m>
             get_selected_notes note 
            <i>pitch</i>
            <i>time</i>
            <i>duration</i>
            <i>velocity</i>
            <i>muted</i>
          </m>
          <br/>
           ... 
          <br/>
          <m>get_selected_notes done</m>
          <br/>
          <br/>
          <m>
            <i>count</i>
          </m>
           [int] is the number of note lines to follow. 
          <br/>
          <m>
            <i>pitch</i>
          </m>
           [int] is the MIDI note number, 0...127, 60 is C3. 
          <br/>
          <m>
            <i>time</i>
          </m>
           [double] is the note start time in beats of absolute clip time. 
          <br/>
          <m>
            <i>duration</i>
          </m>
           [double] is the note length in beats. 
          <br/>
          <m>
            <i>velocity</i>
          </m>
           [int] is the note velocity, 1 ... 127. 
          <br/>
          <m>
            <i>muted</i>
          </m>
           [bool] is 1 if the note is deactivated. 
          <br/>
          <br/>
           For MIDI clips only. 
        </description>
      </liveapi_function>
      <liveapi_function name='move_playing_pos'>
        <description>
           Parameter: 
          <m>
            <i>beats</i>
          </m>
          <br/>
          <m>
            <i>beats</i>
          </m>
           [double] relative jump distance in beats. Negative beats jump
          backwards. 
          <br/>
           Jumps by given amount, unquantized. 
          <br/>
           Unwarped audio clips, recording audio clips and recording non-overdub
          MIDI clips cannot jump. 
        </description>
      </liveapi_function>
      <liveapi_function name='quantize'>
        <description>
          Parameter:
          <br/>
          <m><i>quantization_grid</i></m> [int]          
          <br/>
          <m><i>amount</i></m> [double]
          <br/>
        Quantizes all notes in the clip to the quantization_grid taking the song's 
        swing_amount into account.
        </description>
      </liveapi_function>
      <liveapi_function name='quantize_pitch'>
        <description>
          Parameter:
          <br/>
          <m><i>pitch</i></m> [int]         
          <br/>
          <m><i>quantization_grid</i></m> [int] 
          <br/>
          <m><i>amount</i></m> [double]
          <br/>
        Same as <i>quantize</i>, but only for notes in the given pitch.
        </description>
      </liveapi_function>
      <liveapi_function name='remove_notes'>
        <description>
          Parameter:
          <br/>
          <m><i>from_time</i></m> [double]          
          <br/>
          <m><i>from_pitch</i></m> [double]
          <br/>
          <m><i>time_span</i></m> [double]
          <br/>
          <m><i>pitch_span</i></m> [double]
          <br/>
          Deletes all notes that start in the given area.
          </description>
      </liveapi_function>
      <liveapi_function name='replace_selected_notes'>
        <description>
           To replace the notes selected in the clip, send a series of the
          following function calls to the Clip. 
          <br/>
          <br/>
          <m>replace_selected_notes</m>
          <br/>
          <m>
             notes 
            <i>count</i>
          </m>
          <br/>
          <m>
             note 
            <i>pitch</i>
            <i>time</i>
            <i>duration</i>
            <i>velocity</i>
            <i>muted</i>
          </m>
          <br/>
          <m>done</m>
          <br/>
          <br/>
           The sequence is the same as in 
          <m>get_selected_notes</m>
           , the parameters are the same too. The sequence must always be
          completed, the clip waits for the respective calls even if
          intermediate messages are sent. If count is zero, there are no note
          calls, obviously. 
          <br/>
          <br/>
           In Live, notes don't overlap, so if the new notes overlap with
          unselected notes, the unselected ones are made to fit just like it
          works when you edit notes manually 
          <br/>
          <br/>
           An example sequence of calls looks like this: 
          <br/>
          <m>
            <br/>
             call replace_selected_notes 
            <br/>
             call notes 2 
            <br/>
             call note 60 0.0 0.5 100 0 
            <br/>
             call note 62 0.5 0.5 64 0 
            <br/>
             call done 
            <br/>
          </m>
          <br/>
           For MIDI clips only. 
        </description>
      </liveapi_function>
      <liveapi_function name='select_all_notes'>
        <description>
           Use this function to process all notes of a clip,
          independent of the current selection. 
          <br/>
          <br/>
           Output: 
          <br/>
          <m>select_all_notes id 0</m>
          <br/>
          <br/>
           For MIDI clips only. 
        </description>
      </liveapi_function>
      <liveapi_function name='set_fire_button_state'>
        <description>
           Parameter:
          <m>
            <i>state</i>
          </m>
          <br/>
          <m>
            <i>state</i>
          </m>
           [bool] 
          <br/>
           If the state is set to 1, Live simulates pressing of clip start
          button until the state is set to 0 or until the clip is stopped
          otherwise. 
        </description>
      </liveapi_function>
      <liveapi_function name='set_notes'>
        <description>
          Parameter:
          <br/>
          <m><i>list_of_notes</i></m> [pitch, time, duration, velocity, is_muted]          
          <br/>
          Will apply the given notes to the clip, overwriting existing notes.
          <br/>
          An example sequence of calls looks like this: 
          <br/>
          <m>
            <br/>
             call set_notes 
            <br/>
             call notes 2 
            <br/>
             call note 60 0.0 0.5 100 0 
            <br/>
             call note 62 0.5 0.5 64 0 
            <br/>
             call done 
            <br/>
          </m>
          <br/>
           For MIDI clips only. 
          </description>
      </liveapi_function>
      <liveapi_function name='stop'>
        <description>
           Same effect as pressing the stop button of the track, but only if
          this clip is actually playing or recording. If this
          clip is triggered or if another clip in this track is playing, it has no effect. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Clip.View'>
    <description> Representing the view aspects of a Clip. </description>
    <liveapi_path path='live_set tracks N clip_slots M clip view'/>
    <liveapi_properties>
      <liveapi_property name='grid_is_triplet' gso='gs-' type='bool'>
        <description> Get/set whether the clip is displayed with a triplet grid. </description>
      </liveapi_property>
      <liveapi_property name='grid_quantization' gso='gs-' type='int'>
        <description> Get/set the grid quantization. </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='show_loop'>
        <description>
           If the clip is visible in Live detail view, this function will make the 
           current loop visible there. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Device'>
    <description> This class represents a MIDI or audio device in Live. </description>
    <liveapi_path path='live_set tracks N devices M'/>
    <liveapi_path path='live_set tracks N devices M chains L devices K'/>
    <liveapi_path path='live_set tracks N devices M return_chains L devices K'/>
    <liveapi_children>
      <liveapi_child name='chains' gso='g-o' type='list of Chain'>
        <description> available for device Racks only </description>
      </liveapi_child>
      <liveapi_child name='drum_pads' gso='g-o' type='list of DrumPad'>
        <description>
        All 128 DrumPads for the top most drum rack, inner drum 
        racks return a list of 0 entries.
        </description>
      </liveapi_child>
      <liveapi_child name='parameters' gso='g-o' type='list of DeviceParameter'>
        <description>
           Only automatable parameters are accessible. See 
          <a href='#DeviceParameter'>DeviceParameter</a>
           to learn how to modify them. 
        </description>
      </liveapi_child>
      <liveapi_child name='return_chains' gso='g-o' type='list of Chain'>
        <description> available for device Racks only </description>
      </liveapi_child>
      <liveapi_child name='view' gso='g--' type='Device.View'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='visible_drum_pads' gso='g-o' type='list of DrumPad'>
        <description>
        All 16 visible DrumPads for the top most drum rack, inner drum racks 
        return a list of 0 entries.
        </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='can_have_chains' gso='g--' type='bool'>
        <description>
           0 for a single device 
          <br/>
           1 for a device rack 
        </description>
      </liveapi_property>
      <liveapi_property name='can_have_drum_pads' gso='g--' type='bool'>
        <description>
           1 for a drum racks.
        </description>
      </liveapi_property>
      <liveapi_property name='class_display_name' gso='g--' type='symbol'>
        <description>
           Get the original name of the device (e.g. <m>Operator</m>, <m>Auto Filter</m>).
        </description>
      </liveapi_property>
      <liveapi_property name='class_name' gso='g--' type='symbol'>
        <description>
           Live device type such as 
          <m>MidiChord</m>
           , 
          <m>Operator</m>
           , 
          <m>Limiter</m>
           , 
          <m>MxDeviceAudioEffect</m>
           , or 
          <m>PluginDevice</m>
           . 
        </description>
      </liveapi_property>
      <liveapi_property name='name' gso='gso' type='symbol'>
        <description> This is the string shown in the title bar of the device. </description>
      </liveapi_property>
      <liveapi_property name='type' gso='g--' type='symbol'>
        <description>
           The type of the device. Possible types are: 0=undefined, 1 = instrument, 
           2=audio_effect, 3=midi_effect.
        </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='store_chosen_bank'>
        <description>
           Parameters: 
          <m>
            <i>script_index bank_index</i>
          </m>
          <br/>
          <m>
            <i>script_index</i>
          </m>
           [int] 
          <br/>
          <m>
            <i>bank_index</i>
          </m>
           [int] 
          <br/>
           (This is related to hardware control surfaces and is usually not
          relevant.) 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='Device.View'>
    <description> Representing the view aspects of a Device. </description>
    <liveapi_path path='live_set tracks N devices M view'/>
    <liveapi_path path='live_set tracks N devices M chains L devices K view'/>
    <liveapi_path path='live_set tracks N devices M return_chains L devices K view'/>
	  <liveapi_children>
		  <liveapi_child name='selected_drum_pad' gso='gso' type='DrumPad'>
			  <description> Currently selected drum pad, exists only in drum racks. </description>
		  </liveapi_child>
		  <liveapi_child name='selected_chain' gso='gso' type='Chain'>
			  <description> Currently selected chain, exists only in instrument racks. </description>
		  </liveapi_child>
	  </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='drum_pads_scroll_position' gso='gso' type='int'>
        <description>Lowest row of pads visible, range: 0 - 28.</description>
      </liveapi_property>
    </liveapi_properties>
  </liveapi_object>
<liveapi_object name='DrumPad'>
    <description> This class represents a drum pad in Live. </description>
    <liveapi_path path='live_set tracks N devices M drum_pads L'/>
    <liveapi_children>
      <liveapi_child name='chains' gso='g-o' type='Chain'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='mute' gso='gso' type='bool'>
        <description> 1 = muted </description>
      </liveapi_property>
      <liveapi_property name='name' gso='g-o' type='symbol'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='note' gso='g--' type='int'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='solo' gso='gso' type='bool'>
        <description>
           1 = soloed (solo switch on) 
          <br/>
           does not automatically turn solo off in other chains. 
        </description>
      </liveapi_property>
    </liveapi_properties>
</liveapi_object>
<liveapi_object name='Chain'>
    <description> This class represents a group device chain in Live. </description>
    <liveapi_path path='live_set tracks N devices M chains L'/>
    <liveapi_path path='live_set tracks N devices M return_chains L'/>
    <liveapi_path path='live_set tracks N devices M chains L devices K chains P ...'/>
    <liveapi_path path='live_set tracks N devices M return_chains L devices K chains P ...'/>
    <liveapi_children>
      <liveapi_child name='devices' gso='g-o' type='Device'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='mixer_device' gso='g--' type='ChainMixerDevice'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='has_audio_input' gso='g--' type='bool'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='has_audio_output' gso='g--' type='bool'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='has_midi_input' gso='g--' type='bool'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='has_midi_output' gso='g--' type='bool'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='mute' gso='gso' type='bool'>
        <description> 1 = muted (chain activator off) </description>
      </liveapi_property>
      <liveapi_property name='name' gso='gso' type='unicode'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='solo' gso='gso' type='bool'>
        <description>
           1 = soloed (solo switch on) 
          <br/>
           does not automatically turn solo off in other chains. 
        </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='delete_device'>
        <description>
           Parameter:
           <m>index</m> [int]
           <br/>
           Delete the device at the given index. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='ChainMixerDevice'>
    <description> This class represents a chain's mixer device in Live. </description>
    <liveapi_path path='live_set tracks N devices M chains L mixer_device'/>
    <liveapi_path path='live_set tracks N devices M return_chains L mixer_device'/>
    <liveapi_children>
      <liveapi_child name='sends' gso='g-o' type='list of DeviceParameter'>
        <description>
           [in audio- and instrument racks only] 
          <br/>
           for Drum Racks, otherwise empty 
        </description>
      </liveapi_child>
      <liveapi_child name='panning' gso='g--' type='DeviceParameter'>
        <description> [in audio- and instrument racks only] </description>
      </liveapi_child>
      <liveapi_child name='volume' gso='g--' type='DeviceParameter'>
        <description> [in audio- and instrument racks only] </description>
      </liveapi_child>
      <liveapi_child name='chain_activator' gso='g--' type='DeviceParameter'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
  </liveapi_object>
  <liveapi_object name='DeviceParameter'>
    <description>
       This class represents an (automatable) parameter within a MIDI or audio
      device. To modify a device parameter, set its 
      <m>value</m>
       property or send its object id to 
      <o>live.remote~</o>
       . 
    </description>
    <liveapi_path path='live_set tracks N devices M parameters L'/>
    <liveapi_properties>
      <liveapi_property name='default_value' gso='g--' type='float'>
        <description> Applied when you press the delete key. </description>
      </liveapi_property>
      <liveapi_property name='is_enabled' gso='g--' type='bool'>
        <description>
           1 if the parameter value can be modified directly by the user, by
          sending 
          <m>set</m>
           to a 
          <o>live.object</o>
           , by automation or by an assigned MIDI message or keystroke. 
          <br/>
           Parameters can be disabled because they are macro-controlled, because
          they are controlled by a live-remote~ object, or because Live thinks
          that they must not be moved. 
        </description>
      </liveapi_property>
      <liveapi_property name='is_quantized' gso='g--' type='bool'>
        <description>
           1 for booleans and enums 
          <br/>
           0 for int/float parameters 
          <br/>
           Although parameters like MidiPitch.Pitch appear quantized to the
          user, they actually have an is_quantized value of 0. 
        </description>
      </liveapi_property>
      <liveapi_property name='max' gso='g--' type='float'>
        <description> Lowest allowed value. </description>
      </liveapi_property>
      <liveapi_property name='min' gso='g--' type='float'>
        <description> Largest allowed value. </description>
      </liveapi_property>
      <liveapi_property name='name' gso='g--' type='symbol'>
        <description> The short parameter name as shown in the (closed) automation chooser . </description>
      </liveapi_property>
      <liveapi_property name='original_name' gso='g--' type='symbol'>
        <description> For macro parameters, the name before assignment. </description>
      </liveapi_property>
      <liveapi_property name='value' gso='gso' type='float'>
        <description> Linear-to-GUI value between min and max. </description>
      </liveapi_property>
    </liveapi_properties>
  </liveapi_object>
  <liveapi_object name='MixerDevice'>
    <description>
       This class represents a mixer device in Live. It provides access to
      volume, panning and other 
      <a href='#DeviceParameter'>DeviceParameter</a>
       objects. See 
      <a href='#DeviceParameter'>DeviceParameter</a>
       to learn how to modify them. 
    </description>
    <liveapi_path path='live_set tracks N mixer_device'/>
    <liveapi_children>
      <liveapi_child name='sends' gso='g-o' type='list of DeviceParameter'>
        <description> One send per return track. </description>
      </liveapi_child>
      <liveapi_child name='panning' gso='g--' type='DeviceParameter'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='volume' gso='g--' type='DeviceParameter'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='cue_volume' gso='g--' type='DeviceParameter'>
        <description> [in master track only] </description>
      </liveapi_child>
      <liveapi_child name='crossfader' gso='g--' type='DeviceParameter'>
        <description> [in master track only] </description>
      </liveapi_child>
      <liveapi_child name='track_activator' gso='g--' type='DeviceParameter'>
        <description> </description>
      </liveapi_child>
      <liveapi_child name='song_tempo' gso='g--' type='DeviceParameter'>
        <description> [in master track only] </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='crossfade_assign' gso='gso' type='int'>
        <description> 0 = A, 1 = none, 2=B [not in master track] </description>
      </liveapi_property>
    </liveapi_properties>
  </liveapi_object>
  <liveapi_object name='Scene'>
    <description> This class represents a series of clip slots in Live's session view matrix. </description>
    <liveapi_path path='live_set scenes N'/>
    <liveapi_children>
      <liveapi_child name='clip_slots' gso='g-o' type='list of ClipSlot'>
        <description> </description>
      </liveapi_child>
    </liveapi_children>
    <liveapi_properties>
      <liveapi_property name='color' gso='gso' type='int'>
        <description>
           The RGB value of the scene's color in the form 
          <m>0x00rrggbb</m>
           or (2^16 * red) + (2^8) * green + blue, where red, green and blue are
          values from 0 (dark) to 255 (light). 
          <br/>
          <br/>
           When setting the RGB value, the nearest color from the Scene color
          chooser is taken. 
        </description>
      </liveapi_property>
      <liveapi_property name='is_empty' gso='g--' type='bool'>
        <description> 1 = none of the slots in the scene is filled. </description>
      </liveapi_property>
      <liveapi_property name='is_triggered' gso='g-o' type='bool'>
        <description> 1 = scene is blinking. </description>
      </liveapi_property>
      <liveapi_property name='name' gso='gso' type='symbol'>
        <description>
           May contain bpm and signature commands (like 
          <m>"128bpm 3/4"</m>
           ). 
        </description>
      </liveapi_property>
      <liveapi_property name='tempo' gso='gs-' type='float'>
        <description> Tempo in bpm as found by Live in the name. </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='fire'>
        <description>
           Parameter:
           <m>force_legato (optional)</m> [bool]
           <br/>
           <m>can_select_scene_on_launch (optional)</m> [bool]
           <br/>
           Fire all clip slots owned by the scene and select this scene. 
          <br/>
           Starts recording of armed and empty subtracks in these scene if
          Preferences->Launch->Start Recording on Scene Launch is ON.
          <br/>
          Calling with force_legato=1 (default=0) will launch all clips 
          immediately in legato, independent of their launch mode. 
		  <br/>
		  When calling with can_select_scene_on_launch=0 (default=1) the scene 
		  is fired without selecting it.
        </description>
      </liveapi_function>
      <liveapi_function name='fire_as_selected'>
        <description>
            Parameter:
           <m>force_legato (optional)</m> [bool]
           <br/>
          Fire the selected scene, then select next scene. 
          <br/>
           It doesn't matter on which scene you are calling this function. 
		  <br/>
          Calling with force_legato=1 (default == 0) will launch all clips 
          immediately in legato, independent of their launch mode. 
        </description>
      </liveapi_function>
      <liveapi_function name='set_fire_button_state'>
        <description>
           Parameter: 
          <m>
            <i>state</i>
          </m>
          <br/>
          <m>
            <i>state</i>
          </m>
           [bool] 
          <br/>
           If the state is set to 1, Live simulates pressing of scene button
          until the state is set to 0 or until the scene is stopped otherwise. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='CuePoint'>
    <description> Represents a 'marker' in the arrangement. </description>
    <liveapi_path path='live_set cue_points N'/>
    <liveapi_properties>
      <liveapi_property name='name' gso='g-o' type='symbol'>
        <description> </description>
      </liveapi_property>
      <liveapi_property name='time' gso='g-o' type='float'>
        <description> Arranger position of the marker in beats. </description>
      </liveapi_property>
    </liveapi_properties>
    <liveapi_functions>
      <liveapi_function name='jump'>
        <description>
           Set current arranger playback position to marker, quantized if song
          is playing. 
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='ControlSurface'>
    <description>
       The control surfaces are reachable by the root path 
      <m>
         control_surfaces 
        <i>N</i>
      </m>
       . 
    </description>
    <liveapi_path path='control_surfaces N'/>
  </liveapi_object>
   <liveapi_object name='ControlSurface - Push'>
    <description>
      The Push control surface has some convenience methods for LiveAPI access.
    </description>
    <liveapi_functions>
      <liveapi_function name='get_control'>
        <description>
           Parameter:
           <m>name</m>
           <br/>
            Returns the control with the given name. 
        </description>
      </liveapi_function>
      <liveapi_function name='get_control_names'>
        <description>
           Returns the list of all control names. 
        </description>
      </liveapi_function>
      <liveapi_function name='grab_control'>
        <description>
           Parameter:
           <m>control</m>
           <br/>
           Releases all L9C functionality from the control so that it can be
           used exclusively via the LiveAPI. 
        </description>
      </liveapi_function>
      <liveapi_function name='release_control'>
        <description>
           Parameter:
           <m>control</m>
           <br/>
           Re-establishes the standard functionality for the control.
        </description>
      </liveapi_function>
    </liveapi_functions>
  </liveapi_object>
  <liveapi_object name='this_device'>
    <description>
       This root path represents the device containing the 
      <o>live.path</o>
       object to which the 
      <m>goto this_device</m>
       message is sent. The class of this object is 
      <m>Device</m>
       . 
    </description>
    <liveapi_path path='live_set tracks N devices M'/>
  </liveapi_object>
</vignette>
