<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="_c74_vig.xsl" type="text/xsl"?>
<vignette name="Max for Live Abstractions">	
<a name="m4l_abstractions" />
	<header1>
		Audio and MIDI example abstractions
	</header1>
<bodytext>
	The 
	<a href="https://www.ableton.com/en/packs/max-live-building-tools//">Max for Live Building Tools</a>
	includes a set of helpful
	<link type="vignette" module="core" name="abstractions">abstractions</link>
	that you can use in your own Max for Live Audio effects, MIDI instruments, and MIDI effects. These abstractions provide programming examples
	and starting points for constructing your own patches. 
</bodytext>
<bodytext>
	Live Suite owners can download this Live Pack by choosing <b>Your Account > Your Packs</b>
	when logged in to the Ableton website and clicking on the download button to the Live Pack.
	To install the Live Pack, double-click on the <i>.alp</i> file
</bodytext>
<br />
<bluebox>
<header2>
	Finding the example abstractions
</header2>
<!-- SHOULD THIS CHANGE? -->
<bodytext>
	The example abstractions can be found in the Max applications folder:
</bodytext>
	<ul>
	<li>
		Open the <i>patches</i> folder in your Max applcations folder. Locate the <i>m4l-patches</i>, 
		open it, and open the <i>Tools Resources</i> folder located inside to find the patches
		listed below.
	</li>
	</ul>
</bluebox>
<br />
<header2>
	Example abstractions
</header2>
	<bodytext>
		Here is a listing of the names of the Audio and MIDI example abstractions, 
		followed by a brief description. 
	</bodytext>
	<ul>
	<li>
		<b>M4L.bal1~.maxpat</b>: Balance two mono signals with constant power
	</li>
	<li>
		<b>M4L.bal2~.maxpat</b>: Balance two stereo signals with constant power
	</li>
	<li>
		<b>M4L.comb2.voice~.maxpat</b>: Stereo comb filter voice for <o>poly~</o>
	</li>
	<li>
		<b>M4L.cross1~.maxpat</b>: Crossfade two mono signals with constant power
	</li>
	<li>
		<b>M4L.cross2~.maxpat</b>: Crossfade two stereo signals with constant power
	</li>
	<li>
		<b>M4L.delay.<o>pfft~</o>.maxpat</b>: Frequency-domain delay line for <o>pfft~</o>
	</li>
	<li>
		<b>M4L.envfol~.maxpat</b>: Signal envelope follower with shape controls 
	</li>
	<li>
		<b>M4L.gain1~.maxpat</b>: Scale a mono signal
	</li>
	<li>
		<b>M4L.gain2~.maxpat</b>: Scale a stereo signal
	</li>
	<li>
		<b>M4L.MidiGran.voice.maxpat</b>: A MIDI "granulator" engine to be used with <o>poly~</o>
	</li>
	<li>
		<b>M4L.pan1~.maxpat</b>: Pan a mono signal with constant power
	</li>
	<li>
		<b>M4L.pan2~.maxpat</b>: Pan a stereo signal with constant power
	</li>
	<li>
		<b>M4L.PitchScale.bpatch.maxpat</b>: A pitch remapping abstraction to be loaded into a <o>bpatcher</o> box
	</li>
	<li>
		<b>M4L.PolyBeat.bpatch.maxpat</b>: A pulse generator abstraction to be loaded into a <o>bpatcher</o> box
	</li>
	<li>
		<b>M4L.StepEcho.voice.maxpat</b>: A MIDI delay engine to be used with <o>poly~</o>
	</li>
	<li>
		<b>M4L.tapdelay.voice~.maxpat</b>: Tap delay voice for <o>poly~</o>
	</li>
	<li>
		<b>M4L.transp.<o>pfft~</o>.maxpat</b>: Frequency-domain pitch shifter for <o>pfft~</o>
	</li>
	<li>
		<b>M4L.vdelay~.maxpat</b>: Clickless variable tap delay
	</li>
	</ul>
<a name="m4l_api_abstractions" />
	<header1>
		Live API example abstractions
	</header1>
<bodytext>
	Max for Live includes a set of helpful
	<link type="vignette" module="core" name="abstractions">abstractions</link>
	that demonstrate how to interact with the
	Live API
	in a Max for Live device. These abstractions provide programming examples
	and starting points for constructing your own patches that interact directly
	with the Live application. They are grouped by the part of a Live Session 
	they can access and control.
</bodytext>	
<br />
<bluebox>
<header2>
	Finding the Live API example abstractions
</header2>
<bodytext>
	The Live API example can be found in the Max applications folder:
</bodytext>
	<ul>
	<li>
		Open the <i>patches</i> folder in your Max applcations folder. Locate the <i>m4l-patches</i>, 
		open it, and open the <i>LiveAPI Resources</i> folder located inside to find the patches
		listed below.
	</li>
	</ul>
</bluebox>
<br />
<header2>
	Global Abstractions
	</header2>
	<ul>
	<li>
		<b>M4L.api.ObserveTransport.maxpat</b>: Monitors the status of Live's transport (is the song playing or not).
	</li>
	<li>
		<b>M4L.api.ToggleTransport.maxpat</b>: Stops Live's transport when the song is playing - start it if not.
	</li>
	<li>
		<b>M4L.api.SaveInteger.maxpat</b>: Saves an integer number with the live set and restores it without letting anything through when set.
	</li>
	<li>
		<b>M4L.api.SaveLivePath.maxpat</b>: This patch is used to store a path in a LiveSet.
	</li>
	</ul>

	<header2>
	Track Abstractions
	</header2>
	<ul>
	<li>
		<b>M4L.api.ChangeTrackVolume.maxpat</b>: Changes the volume of the currently selected track by a given value.
	</li>
	<li>
		<b>M4L.api.GetSelectedTrackIndex.maxpat</b>: Gets the index of the currently selected (highlighted) track in the Live set.
	</li>
	<li>
		<b>M4L.api.GetVisibleTrackCount.maxpat</b>: Gets the number of the visible tracks in the current Live set.
	</li>
	<li>
		<b>M4L.api.SelectMasterTrack.maxpat</b>: Selects the Master Track of the current Live set.
	</li>
	<li>
		<b>M4L.api.SelectNextTrack.maxpat</b>: A bang message selects the next track in the current Live Set.
	</li>
	<li>
		<b>M4L.api.SelectPreviousTrack.maxpat</b>: A bang message selects the previous track in the current Live Set.
	</li>
	<li>
		<b>M4L.api.SetSelectedTrackIndex.maxpat</b>: Sets the selected track to a given index. The index will be mapped against the list of visible tracks.
	</li>
	</ul>

	<header2>
	Scene Abstractions
	</header2>
	<ul>
	<li>
		<b>M4L.api.FireSelectedScene.maxpat</b>: Fires the currently selected Scene.
	</li>
	<li>
		<b>M4L.api.GetSceneCount.maxpat</b>: Gets the total number of scenes in the current Live Set.
	</li>
	<li>
		<b>M4L.api.GetSelectedSceneIndex.maxpat</b>: Gets the index of the currently selected/highlighted scene.
	</li>
	<li>
		<b>M4L.api.SelectNextScene.maxpat</b>: Selects the scene next to the currently selected/highlighted one.
	</li>
	<li>
		<b>M4L.api.SelectPreviousScene.maxpat</b>: Selects the scene previous to the currently selected/highlighted one.
	</li>
	<li>
		<b>M4L.api.SetSelectedSceneIndex.maxpat</b>: Sets the selected scene to a given index.
	</li>
	</ul>

	<header2>
	Clip Abstractions
	</header2>
	<ul>
	<li>
		<b>M4L.api.FireSelectedClip.maxpat</b>: Fires the clip that is determinde by the currently selected (highlighted) scene and track.
	</li>
	</ul>

	<header2>
	Note Abstractions
	</header2>
	<ul>
	<li>
		<b>M4L.api.GetSelectedNotes.maxpat</b>: Locates the clip that is currently selected in the Clip View, read out all its selected MIDI notes and fill them into a Jitter Matrix.
	</li>
	<li>
		<b>M4L.api.ReplaceSelectedNotes.maxpat</b>: Will replace the currently selected MIDI notes
	</li>
	<li>
		<b>M4L.api.ReverseNotes.maxpat</b>: Reverses an input matrix of MIDI notes
	</li>
	<li>
		<b>M4L.api.InvertNotes.maxpat</b>: Inverts an input matrix of MIDI notes
	</li>
	<li>
		<b>M4L.api.MoveInScale.maxpat</b>: Moves a selection of MIDI notes without leaving the given scale
	</li>
	<li>
		<b>M4L.api.BuildChord.maxpat</b>: Builds a chord on each input note
	</li>
	<li>
		<b>M4L.api.BuildArpeggio.maxpat</b>: Builds an arpeggio on each input note
	</li>
	</ul>

	<header2>
	Device Abstractions
	</header2>
	<ul>
	<li>
		<b>M4L.api.DeviceParameter.maxpat</b>: This patch represents a Ableton Live device parameter. It accepts a paramter id as input and can set and get values in unscaled and raw format and output its min/max values.
	</li>
	<li>
		<b>M4L.api.DeviceParameterRemote.maxpat</b>: This patch represents a device parameter
	</li>
	<li>
		<b>M4L.api.GetAllDeviceIds.maxpat</b>: Takes a list of track ids as input, scan all those tracks for their devices and output a list of device ids.
	</li>
	<li>
		<b>M4L.api.GetDeviceNames.maxpat</b>: Takes a list of device ids as input and generate two lists of device names, one with no special format and the other ready to be input into an <o>umenu</o>.
	</li>
	<li>
		<b>M4L.api.GetParameterNames.maxpat</b>: Takes a list of parameter ids as input and generate two lists of parameter names, one with no special format and the other ready to be input into an <o>umenu</o>.
	</li>
	<li>
		<b>M4L.api.SelectDevice.maxpat</b>: Builds a menu of all available devices. 
	</li>
	<li>
		<b>M4L.api.SelectParameter.maxpat</b>: Creates a list of all available parameters and fills it into an <o>umenu</o>. Use this patch inside a <o>bpatcher</o> object to display the menu. Outputs the id of the selected parameter (to be input in a <b>M4L.api.SelectDeviceParameter</b> object).
	</li>
	</ul>
	</vignette>
