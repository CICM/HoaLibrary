<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="_c74_vig.xsl" type="text/xsl"?>
<vignette name="The Dependencies Window">
<header1>
Managing Dependencies
</header1>
	<bodytext>
		Max analyzes the files your patchers use and automatically includes 
		them when creating a frozen device. However, in some cases, you will 
		have to tell Max about files your patchers use:
	</bodytext>
	<ul>
	<li>
		Files used by objects as a result of using messages. One example 
		is a new patcher loaded via the load message sent to a <o>pcontrol</o> 
		object. If you load a file into an object and then freeze and save the 
		device, some, but not all, objects will add the file to the device. 
		Objects that will <i>not</i> add files they are using that were opened 
		via messages include <o>detonate</o>, <o>funbuff</o>, <o>imovie</o>, 
		<o>itable</o>, <o>sfplay~</o>, <o>sflist~</o>, and <o>text</o>.
	</li>
	<li>
		Files used by objects that never add them automatically to frozen 
		devices. The <o>mxj</o> object never adds the Java class files it uses, 
		nor can they be added to frozen devices because <o>mxj</o> doesn't 
		know how to access them. Third-party Max objects may not support automatic 
		inclusion of the files they use in frozen devices or may not be able 
		to read files included in frozen devices.
	</li>
	</ul>
	<bodytext>
		If a patcher's automatic file usage analysis is not sufficient, you can 
		add files to a patcher as <i>explicit dependencies</i> using the Dependencies 
		window. Once you specify an explicit dependency, it will be saved with a patcher 
		and included every time you save a frozen device with that patcher. Files that 
		are automatically included with a patcher - <i>implicit dependencies</i> - can 
		also be managed in the Dependencies window. 
	</bodytext>
	<br />
	<bluebox>
	<header2>
		Adding a File as an Explicit Dependency
	</header2>
	<ul>
	<li>
		Choose <b>Dependencies</b> from the View menu when a patcher window is topmost. 
		The Dependencies window will appear.
	</li>
	</ul>
	<bodytext>
		<img src="images/live_dependencywindow.png" />
	</bodytext>
	<ul>
	<li>
		Click the <b>+</b> (Add File Dependency) button in the Dependency window toolbar. 
		A new dependency called Dependency_1 will appear.
	</li>
	<bodytext>
		<img src="images/live_dependency1.png" />
	</bodytext>
	<li>
		Click the Choose... button to associate a file with the dependency. Or type in a 
		filename or pathname -- if you type in a name that refers to a valid file, the 
		Type column will change from Missing to the type of the file.
	</li>
	<bodytext>
		Note that all dependencies must be in the Max 
		<link type="vignette" module="core" name="search_path">search path</link>. 
		Files not in the search path will be listed as <i>missing</i>.
	</bodytext>
	<li>
		To add a folder of files, click the Add Folder Dependency button instead. 
		As with file dependencies, folders must be in the search path.
	</li>
	</ul>
</bluebox>
<br />
<bluebox>
<header2>
Removing an Explicit Dependency
</header2>
	<ul>
	<li>
		With the Dependencies window open, select the name of the file you wish 
		to remove, then click the <b>-</b> button in the Dependencies window toolbar. 
		The file will disappear from the list of dependencies.
	</li>
	<bodytext>
	<img src="images/live_clickremovedependency.png" />
</bodytext>
	<bodytext>
		Only explicit dependencies (with Choose... buttons next to their names) can be removed.
	</bodytext>
</ul>
</bluebox>
<bodytext>
</bodytext>
<bluebox>
<header2>
Showing Object Dependencies
</header2>
	<bodytext>
		By default, Max external objects are not listed in the Dependencies window, 
		because in most cases they are handled automatically for you. Objects included 
		with a standard Max installation are never included in frozen devices. Objects 
		created by third parties are always included.
	</bodytext>
	<ul>
	<li>
		Click the Show Objects icon in the Dependency window toolbar.
	</li>
	<bodytext>
		<img src="images/live_showobjects.png" />
	</bodytext>
	<bodytext>
		Objects included in the patcher will appear. Objects included in a standard 
		Max install are labeled <i>object</i> in the Type column. Objects not included 
		in a standard installation are labeled <i>object (third-party)</i>. Third-party 
		objects are always included in a frozen device. Standard objects are never included.
	</bodytext>
</ul>
</bluebox>
<bodytext>
</bodytext>
<bluebox>
<header2>
Showing Dependency Sources
</header2>
	<bodytext>
		The Source column of the Dependencies window indicates the patcher(s) that use each file.
	</bodytext>
	<ul>
	<li>
		Double-click on the patcher name(s) shown in the Source column for a dependency. 
	</li>
	<bodytext>
		<img src="images/live_sources.png" />
	</bodytext>
	<li>
		If there is only one patcher name listed, that patcher window will be 
		brought to the front. If there are multiple names, you will see a menu of patcher 
		names. Choose the desired patcher from the menu, and it will be brought to the front.
	</li>
</ul>
</bluebox>

</vignette>
