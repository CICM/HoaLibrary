<?xml version='1.0' encoding='UTF-8'?>

<?xml-stylesheet href="./_c74_tut.xsl" type="text/xsl"?>

<chapter name="Hoa Introduction Tutorial 1: L’ambisonie d’ordre supérieur">

<openfile name="01mHello" patch="01mHello.maxpat"/>


<indexinfo category="Basics" title="Hello">Creating objects and connections</indexinfo>

<header>Tutorial 1: Hello</header>

<subhead>Max patcher basics</subhead>

<body>L’ambisonie est un ensemble de techniques de synthèse, d’enregistrement et de reproduction de champs sonores basé sur une décomposition du champ acoustique en harmoniques sphériques. Cette représentation du champ acoustique en une somme de fonctions spatiales est valable localement, pour un espace défini, autour d’un point donné [Daniel, 2001]. Cet espace correspond à une sphère dont le centre est l’auditeur, en ce sens, les techniques de reproduction ambisonique peuvent être qualifiées de « surround » car elles enveloppent l’auditeur (Figure 1).</body>

<body>This brief tour of a simple patcher will show the basic typology of simple programs written in Max: <b>object</b> boxes that perform command actions within a patch; message boxes that allow us to create messages that can be sent to the objects; comment boxes that allow us to document our patchers to make them easier to understand.</body>

<subhead>Looking around</subhead>

<body>Take a look at the patcher 01mHello.  At the top right-hand side of the patch window, we can see three types of boxes.</body>

<body>The first element is the box labeled <o>print</o>.  This is an <b>object</b> box, and can be recognized by it's rounded outline and (in this case) a small "port" at the top left that we call an <i>inlet</i>.  <b>Object</b> boxes are the basic logic element of Max – they contain functions that perform some sort of task, and operate like miniature programs within the larger environment.</body>

<body>Just below the <b>object</b> box is a <o>message</o> box (labelled with the word "message").  These are visually different from the <b>object</b> box – they have a gray background, and do not have an outline. Message boxes contain some information (called a <i>message</i>) that can be sent to objects, and can operate as either commands or control data.</body>

<body>The third box doesn’t look like a box at all – it appears to be text on the background of patcher window. There is actually a box around this text, but it is not visible until we decide to edit our patch. This <o>comment</o> box is used to add text for labeling controls (e.g. "click me"), or for adding comments to your patch to make its operation more apparent to you or anyone you might share your patch with.</body>

<body>Max programs function by passing messages between objects.  <b>Object</b> boxes can be connected to one another, and message boxes can be used to originate or, in some cases, process messages that are used to control other objects.</body>


<subhead>Unlocking the patcher</subhead>

<body>When you first opened this patcher, we found it in a "locked" state – meaning that we cannot edit any of the objects or text in the window.  When a patcher is locked, the intention is that it be used as a program.  Since the power of Max is that we can to edit and manipulate these programs to do whatever we like, let's "unlock" this patch and do some editing.</body>

<body>Choose <b>Edit</b> from the <b>View</b> menu. You will see several changes in the patcher.  First, the boxes surrounding the <o>comment</o> boxes are revealed (we told you they were there).  Secondly, the <o>message</o> and <o>comment</o> boxes show inlets that were hidden in the locked state.  In addition, ports on the <i>bottom</i> of these boxes are revealed; these are <i>outlets</i>.  Finally, many more of the icons at the bottom of the patcher window are now available for our use.</body>

<body>In addition to the visible changes, we are now free to edit the contents of the window. Double-click inside the <b>object</b> box in the upper-right that says <o>print</o>; the text is selected, and you can type the name of another object name into that box. Type "metro" (without the quotes), and click outside the <b>object</b> box to complete the edit. We have now changed the function of that object (it is now a <o>metro</o> object). You will see the <b>object</b> box change size, and the number of inlets and outlets will change as the function of the object has changed.  We learn Max by building up a vocabulary of objects and how they connect to other objects (i.e. what messages they understand and transmit).</body>

<body>Double-click inside the <o>message</o> box right below that. Change the message text to anything (for example, type in the word "anything"), then click outside the box to accept the change.  Note that changing the message text does not change the inlets or outlets, since only the contents (but not the function) of the message box has changed.</body>

<body>Finally, double-click inside the comment box and change its text. Since the comment box has no function other than adding text to the patch, you are free to put in any text that pleases you.</body>

<subhead>Interacting with a locked patcher</subhead>

<body><i>Lock</i> the patch by unchecking <b>Edit</b> in the <b>View</b> menu. Let’s see what happens when we click on each of the box types.  
In the upper right-hand corner of the patch, click on the <b>object</b> box (which we changed from <o>print</o> to <o>metro</o>) – nothing 
happens. Clicking on the <o>message</o> box directly below it, however, changes the background color – obviously, something 
is happening when we click on that box.</body>

<body>On the left side of our patcher, there are three <o>message</o> boxes connected to a <o>print</o> object with lines (called <i>patchcords</i>). Click on each of these <o>message</o> boxes in turn, then look at the Max window; you will see that the contents of the <o>message</o> boxes we clicked are displayed there.  This was a result of clicking on the <o>message</o> boxes: they generated a message (the content of the message box) and sent it down the patchcord to the <o>print</o> object.  The <o>print</o> object takes any message it receives in its inlet and "prints" it out in the Max window. (If the Max window is not shown, you can select it from the Window menu, or select the "Max Window" tab in an open sidebar.)</body>

<subhead>Commas change everything</subhead>

<body>You probably noticed that two of the <o>message</o> boxes have almost identical text, but the display in the Max window is different. The <o>message</o> box with the text "Good morning, everybody!", when sent to the <o>print</o> object, caused the text to be displayed on two lines. The <o>message</o> box right below it (with the text "Good morning\, everybody!") was displayed by the <o>print</o> object on a single line in the Max window.  The difference is in the use of the <i>comma</i>, which has a special meaning in <o>message</o> boxes within Max.</body>

<body>In a <o>message</o> box, the comma is used as a message separator; in essence, it turns a single line of text into two discrete messages.  Thus, the message "Good morning, everybody!" is really treated like two messages: "Good morning" is sent out the outlet of the <o>message</o> box, followed immediately by "everybody!".</body>

<body>In order to treat the comma as text (rather than as a message separator), you need to let the <o>message</o> box know that you are overriding the comma’s special behavior.  You do this by preceding the comma with the backslash ("\") character, which tells the <o>message</o> box to ignore the comma’s special use, and treat it as a literal text character.  Those of you familiar with textual programming languages will find the use of a backslash character to "escape" a character that has special meaning familiar.</body>

<body><b>Unlock</b> the patcher, click inside the lower <o>message</o> box (the one with the backslash) and remove the slash.  <b>Lock</b> the patch and click on the edited <o>message</o> box – you will see that it, too, now creates two lines of text in the Max window. Edit the first message box, adding a backslash before its comma, and lock the patch; it now exhibits the expected behavior of printing the entire message on a single line.</body>

<subhead>Getting help</subhead>

<body>The <o>print</o> object is obviously doing something to send text to the Max window; in fact, every <b>object</b> box performs some sort of task. To determine what function an <b>object</b> box performs, you can view several types of document to get help.</body>

<body><b>Unlock</b> the patcher and select the <o>print</o> object box by either clicking into it or clicking and dragging the mouse over it to <i>highlight</i> it. Select <b>Open print Help</b> from the <b>Help</b> menu. A new patcher window (called a <i>Help</i> patcher) opens with an example that shows the <o>print</o> object in action. Note that this is an <i>actual</i> Max patch, and can be unlocked, edited, or copied elsewhere, retaining any of the displayed functionality.</body>

<body>Close the <o>print</o> object's Help patcher and reselect the <o>print</o> object. Select <b>Open print Reference</b> from the <b>Help</b> menu. A browser window (much like this one) is displayed with the <i>Reference Manual</i> page for the <o>print</o> object. This gives detailed information about the object, all of its inlets and outlets, and even provides an example patch for your reference.  This is perhaps the most detailed information available for any object.  Objects and topics relevant or similar to the object you're viewing can be viewed by clicking on links in the <i>See Also</i> section at the bottom of the reference or on the "?" tab of an object's help file.</body>

<subhead>Create some new messages</subhead>

<body>Let’s add some objects to our patch, and create our own message passing logic.  First, with the patcher unlocked, click on the <i>Object Explorer</i> icon (the "binocular" symbol at the bottom of the window), then select the <b>object</b> in the Basic section. This will place an empty <b>object</b> box on your patcher window, ready for you to enter its name.  Enter "print", then click outside the box to accept this change.  Move the object somewhere in the patcher with some clear space above it by clicking and dragging it around.</body>

<body>Next, open the Object Explorer and select a <o>message</o> box. When it appears in your patcher window, type in the message "Goodbye!".  Place this <o>message</o> box above the <o>print</o> object.  Finally, <b>connect</b> the two boxes by clicking on the outlet of the <o>message</o> box, dragging the mouse to the inlet of the <o>print</o> object, then releasing the mouse button.  This will create a patchcord between the two objects, allowing messages to pass from the <o>message</o> box to the <o>print</o> object.</body>

<body><b>Lock</b> the patch and click on the new "Goodbye!" <o>message</o>.  You will see the text "Goodbye!" appear on the Max Window.  Congratulations – you’ve just done your first Max patching!</body>

<subhead>Conclusion</subhead>

<body>The three main elements of a Max patch (<b>object</b> boxes, <o>message</o> boxes and <o>comment</o> boxes), along with patchcords, are the core of all Max programs. Each type of element responds to a variety of messages and editing functions; these can be explored by viewing the help files and Reference Manual documents. Each of these aspects will be expanded upon in later tutorials.</body>

<seealsolist>
<seealso name="print">Print any message in the Max window</seealso>

<seealso name="message">Display and send any message </seealso>

<seealso name="comment">Text comment in a Patcher</seealso>

</seealsolist>

</chapter>
