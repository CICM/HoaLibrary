#N canvas 51 214 771 461 10;
#X obj 27 391 hoa.out~;
#X obj -55 -15 c.loadmess;
#X text 1 283 Receive the signal;
#X text 3 413 Output the signal;
#X obj 27 349 *~;
#X obj 128 309 line~;
#X msg 128 287 \$1 20;
#X obj 27 305 hoa.in~ extra 1;
#X obj -55 32 hoa.thisprocess~;
#X obj -55 90 unpack 0 0;
#X obj 128 171 *;
#X obj 143 140 abs;
#X obj 233 208 < 0;
#X obj 128 228 spigot 0;
#X obj 188 228 spigot 0;
#X obj 128 254 cos;
#X obj 173 208 >= 0;
#X obj 188 254 sin;
#X text 126 61 Extra 1 Receive the azimuth (in radian).;
#N canvas 0 22 450 300 print.domain.error 0;
#X obj 6 54 hoa.mode.sel;
#X obj 6 133 sel 0;
#X obj 7 214 print hoa.syn.encoder~;
#X msg 7 163 only valid in the circular harmonics domain.;
#X obj 6 24 inlet;
#X connect 0 0 1 0;
#X connect 1 1 3 0;
#X connect 3 0 2 0;
#X connect 4 0 0 0;
#X restore -24 68 pd print.domain.error;
#X text 193 315 If index of the harmonic >= 0 \, the signal is multiplied
by cos(azimuth * index of the harmonic) else \, the signal is multiplied
by sin(azimuth * abs(index of the harmonic)).;
#X text 172 -5 This hoa.processing shows what performs the encoding
of a signal in the circular harmonics domain.;
#X obj 128 91 hoa.in extra 2;
#X msg 205 123 0;
#X connect 1 0 8 0;
#X connect 4 0 0 0;
#X connect 5 0 4 1;
#X connect 6 0 5 0;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 8 1 19 0;
#X connect 8 3 23 0;
#X connect 9 1 11 0;
#X connect 9 1 16 0;
#X connect 9 1 12 0;
#X connect 10 0 13 0;
#X connect 10 0 14 0;
#X connect 11 0 10 1;
#X connect 12 0 14 1;
#X connect 13 0 15 0;
#X connect 14 0 17 0;
#X connect 15 0 6 0;
#X connect 16 0 13 1;
#X connect 17 0 6 0;
#X connect 22 0 10 0;
#X connect 23 0 10 0;
